module.exports = function anonymous(rawInput
) {

  var input = lookupInput(rawInput);
  var json = {"type":"LSTMTimeStep","options":{"inputSize":1,"inputRange":0,"hiddenLayers":[20],"outputSize":1,"decayRate":0.999,"smoothEps":1e-8,"regc":0.000001,"clipval":5,"maxPredictionLength":100,"dataFormatter":{"indexTable":{},"characterTable":{},"characters":[],"specialIndexes":[]}},"hiddenLayers":[{"inputMatrix":{"rows":20,"columns":1,"weights":[0.03995416685938835,-0.4081219732761383,1.4101364612579346,1.365856647491455,3.227461338043213,1.0556446313858032,2.2904603481292725,6.659799575805664,-1.9920845031738281,1.9085149765014648,1.961930274963379,2.5561418533325195,-2.542827606201172,0.7804787158966064,-0.05647008866071701,1.1538212299346924,-1.632591724395752,7.071377277374268,4.023624897003174,-1.3702563047409058]},"inputHidden":{"rows":20,"columns":20,"weights":[1.9351563453674316,8.33288288116455,1.4169600009918213,0.3128904402256012,1.7026135921478271,0.8354129791259766,-2.194707155227661,6.29342794418335,-1.0848888158798218,1.3374086618423462,-6.5228962898254395,-6.2285051345825195,-4.339244365692139,6.613937854766846,-0.11159621179103851,2.128511905670166,-0.0926828533411026,-0.023723796010017395,2.923157215118408,0.19654135406017303,12.818827629089355,4.475900650024414,3.8502542972564697,3.8101537227630615,-0.980657160282135,-0.3360346853733063,9.219708442687988,5.1894001960754395,-2.1465823650360107,1.5819615125656128,-25.634632110595703,2.9989538192749023,-2.199939250946045,16.392492294311523,0.0632658377289772,2.1733269691467285,0.01365624275058508,0.8805278539657593,-15.012677192687988,-0.44745922088623047,-0.0716019943356514,-0.07825961709022522,-11.277541160583496,2.1768035888671875,3.6749792098999023,0.6032081246376038,2.1323421001434326,1.6197381019592285,3.8362674713134766,-3.0548131465911865,-10.022117614746094,-1.9800419807434082,4.174860000610352,8.1481294631958,0.548167884349823,-2.347264051437378,0.08839461207389832,-2.132025957107544,2.6696202754974365,-0.04856409132480621,1.6126271486282349,1.4009162187576294,-0.14271409809589386,3.490506887435913,0.18111552298069,-0.07066502422094345,8.847345352172852,1.809241771697998,1.1151188611984253,-1.1385847330093384,-9.578934669494629,-0.29442039132118225,-0.46649131178855896,5.073332786560059,-0.013235912658274174,-1.1148827075958252,-0.16854849457740784,-1.2921277284622192,1.3084096908569336,0.047924675047397614,2.733377695083618,3.6005699634552,1.6824580430984497,0.33914220333099365,0.4618295133113861,-0.00048459984827786684,2.644514560699463,-1.4523389339447021,1.1727889776229858,-0.5380488038063049,-4.56464147567749,3.699758768081665,-0.10521652549505234,9.090508460998535,0.11715171486139297,-1.6425271034240723,-0.3229006230831146,1.139499545097351,1.2659209966659546,-0.4762738347053528,0.30341005325317383,-0.176884725689888,0.08369634300470352,-0.06520067155361176,-0.06298884004354477,-0.2079652100801468,1.1192874908447266,0.0943252444267273,-0.024103837087750435,-0.1747893989086151,-1.635439157485962,0.09487040340900421,-0.215116947889328,1.9418967962265015,0.05728571116924286,0.1356819123029709,-0.15482041239738464,0.09955364465713501,-0.0037738780956715345,-0.14521890878677368,5.846592426300049,5.4503865242004395,-2.867116689682007,6.769904136657715,7.557496547698975,1.4275611639022827,-8.703103065490723,-0.05518639460206032,12.978921890258789,-15.715803146362305,-5.178411483764648,0.4917842745780945,9.262381553649902,11.223610877990723,1.6622889041900635,-6.64932918548584,-0.6829918026924133,-5.166797161102295,0.40840449929237366,2.506819486618042,-4.92724084854126,11.793266296386719,-0.0853285863995552,1.5420212745666504,4.435214996337891,0.1762804239988327,6.314642906188965,0.126205176115036,5.312030792236328,-1.7759102582931519,6.017861366271973,-3.5469210147857666,2.882148504257202,4.189680576324463,0.6819261312484741,-4.008669376373291,-1.1023927927017212,-4.187882423400879,8.770125389099121,0.4685361981391907,0.6819556355476379,-7.854979991912842,-2.379481315612793,6.833632469177246,6.678929805755615,0.35572072863578796,3.6734304428100586,-0.3722226023674011,8.112881660461426,-0.15095995366573334,-1.3025379180908203,2.4949796199798584,0.06274308264255524,2.326756238937378,0.8591268062591553,-3.4468276500701904,-0.10520067811012268,-1.8078901767730713,-2.506547689437866,1.0357272624969482,1.7779995203018188,6.369577407836914,-4.420989990234375,1.231763243675232,2.986663818359375,0.05314634367823601,0.6764191389083862,2.336879014968872,4.853822708129883,1.4029273986816406,-7.517856121063232,-0.7720808982849121,2.699014186859131,11.161269187927246,-0.020139425992965698,-0.33051809668540955,-0.07390330731868744,-0.30771923065185547,-2.342503547668457,0.07814210653305054,-7.040385723114014,-24.934858322143555,-9.849133491516113,-1.49063241481781,-3.1103291511535645,-1.1435275077819824,13.189931869506836,-5.606006145477295,3.772339344024658,6.246534824371338,-16.436330795288086,14.832918167114258,-26.798078536987305,8.235464096069336,-0.9413177967071533,1.7750840187072754,-1.995229959487915,0.08752278238534927,-3.4007792472839355,-1.3341258764266968,0.6771664619445801,0.5336650013923645,0.37566226720809937,-0.15869349241256714,0.028073571622371674,0.2011444866657257,8.10387897491455,-3.3250207901000977,-0.47828930616378784,0.15236452221870422,-1.967025876045227,0.5412417650222778,0.38970664143562317,-2.9886419773101807,0.023244421929121017,0.4365588426589966,0.02076662704348564,0.046237025409936905,-3.216294288635254,-0.2007530778646469,4.523956775665283,11.54814338684082,-1.3239465951919556,1.9699382781982422,1.835805058479309,2.181116819381714,-2.359600305557251,-0.06409679353237152,1.0546172857284546,-1.6129664182662964,-4.421184539794922,-1.4417567253112793,-5.8382487297058105,2.745927333831787,-0.40762293338775635,-1.2884197235107422,-1.3851981163024902,-0.25262096524238586,-1.2070367336273193,1.5143002271652222,14.032905578613281,-6.913594722747803,13.334481239318848,-10.853994369506836,-7.759838104248047,-0.9010009169578552,15.786617279052734,-4.284201145172119,-5.1533660888671875,10.004684448242188,-1.6934939622879028,16.632287979125977,-37.71686553955078,-7.8360209465026855,-3.2167136669158936,7.446653366088867,-3.128255844116211,6.58445930480957,-3.2029800415039062,-0.44913527369499207,0.19929103553295135,0.030611801892518997,0.033433131873607635,-0.10853859037160873,0.011621125042438507,-0.02536759153008461,0.22834382951259613,-0.059170592576265335,-0.05700935423374176,-0.07244887948036194,-1.068386197090149,0.003126857103779912,0.06043938174843788,2.3047497272491455,0.02490755170583725,-0.28135281801223755,-0.07073987275362015,0.2604641318321228,0.04375450685620308,-0.08530154079198837,5.6892523765563965,2.4347379207611084,0.20367775857448578,1.4522396326065063,1.6103261709213257,-0.1989792436361313,0.03874453529715538,2.3320536613464355,-0.3050840497016907,-0.9594862461090088,-11.457164764404297,-1.8859981298446655,0.6329357028007507,8.123200416564941,0.7289832234382629,-4.920086860656738,0.15957362949848175,-0.8490281105041504,2.78843355178833,0.18761596083641052,0.45866262912750244,0.04861065000295639,-0.05879918485879898,0.08954808861017227,0.08516086637973785,0.15004587173461914,-0.9329218864440918,-0.19394296407699585,0.0690542459487915,0.7043877840042114,-0.6236738562583923,0.0632159486413002,-0.25943809747695923,5.826840400695801,-0.006068044807761908,-0.1621100753545761,0.9447333812713623,-0.22257734835147858,-0.33716240525245667,0.11798010766506195,2.148850202560425,-3.4469542503356934,1.6934963464736938,0.6527669429779053,2.157637119293213,-0.09508100152015686,34.957176208496094,-1.1982771158218384,-2.481700897216797,0.5358263850212097,-9.219260215759277,-0.26841166615486145,-0.6689042448997498,1.6851774454116821,0.0720859169960022,0.5796812772750854,-0.2809514105319977,-0.6729729175567627,2.7384793758392334,-0.19379302859306335,2.1735620498657227,10.741228103637695,-8.705426216125488,7.588618278503418,9.450963973999023,1.5402226448059082,2.99109148979187,3.2325592041015625,3.2251663208007812,-5.365058898925781,-13.82180404663086,-3.8211469650268555,3.1713593006134033,9.252058029174805,1.8504691123962402,-3.2589733600616455,-0.5893570184707642,-4.678262233734131,8.167617797851562,1.3544118404388428,-0.5116995573043823,1.1766366958618164,0.9235977530479431,0.40495726466178894,0.4906598925590515,-0.3510655462741852,0.4521062672138214,0.2833068370819092,-0.9602499008178711,1.7893834114074707,-0.11892767250537872,0.3983650207519531,-0.5956084132194519,4.643927097320557,0.17735539376735687,-0.4325927495956421,0.6623009443283081,-0.5074876546859741,-0.6155385375022888,1.7663501501083374]},"inputBias":{"rows":20,"columns":1,"weights":[-0.7012812495231628,9.154623985290527,-5.216891765594482,-6.458641052246094,-0.14557498693466187,-0.5540376901626587,-0.2848004102706909,-0.605278491973877,-3.1593894958496094,0.9448351263999939,4.172487258911133,-0.11223912239074707,2.3085951805114746,-11.028793334960938,-0.11921185255050659,-1.535759687423706,0.11487436294555664,0.009901085868477821,-5.262251853942871,-5.072454452514648]},"forgetMatrix":{"rows":20,"columns":1,"weights":[-2.6885879039764404,-6.785202980041504,-2.7893197536468506,-3.5963492393493652,-1.9029593467712402,-0.377991646528244,0.49025654792785645,-3.7289211750030518,-0.5578022003173828,3.325157642364502,-3.270829200744629,-1.2789543867111206,-0.9891344308853149,0.4015754163265228,-0.5737177729606628,-1.8007314205169678,-0.44864770770072937,-0.9663820266723633,-1.1740267276763916,-1.9686930179595947]},"forgetHidden":{"rows":20,"columns":20,"weights":[3.3467049598693848,-0.20144441723823547,0.022400977090001106,0.06279954314231873,-0.11668583750724792,0.023468993604183197,2.0856075286865234,0.30265095829963684,0.0392160639166832,-0.6004413366317749,-2.1899001598358154,0.09523243457078934,-0.11472684144973755,5.9316792488098145,0.02136591635644436,0.135153666138649,-0.12873932719230652,0.17159175872802734,-0.2939874529838562,0.060436051338911057,1.5327247381210327,-0.7891203761100769,-0.09202364832162857,-0.000871157506480813,0.004150204826146364,-0.007477417588233948,2.056818962097168,-0.7327104210853577,0.02497710846364498,0.016142141073942184,-4.097955226898193,-0.012135107070207596,0.02160525508224964,-1.4016410112380981,-0.049580127000808716,-0.016861567273736,-0.014164416119456291,-0.01943352445960045,-2.5251095294952393,-0.0012245395919308066,-0.19294792413711548,-0.09786020964384079,0.31618016958236694,0.004572655074298382,-0.020909864455461502,-0.013130754232406616,1.3492416143417358,-0.011574896052479744,0.5000178813934326,-0.26612287759780884,-3.053260087966919,0.06257890164852142,0.003350693266838789,1.068381905555725,0.0005088388570584357,-0.005675062071532011,0.00808378029614687,-0.04835843667387962,-0.5500671863555908,0.005436019040644169,-0.3385980725288391,0.23121623694896698,-0.02517218142747879,-0.010612758807837963,0.043309085071086884,-0.011872471310198307,0.7486532926559448,-0.0930885374546051,-0.017244070768356323,0.04594091325998306,0.4919278025627136,0.008980751037597656,0.04208013042807579,-1.7022894620895386,0.000016198866433114745,-0.18911130726337433,0.005270679946988821,-0.059525392949581146,0.2658970355987549,0.006403469480574131,0.16051627695560455,0.410148948431015,0.03361040726304054,0.02051309123635292,-0.04871003329753876,0.04147202894091606,0.28346166014671326,0.1815418303012848,0.10266683250665665,-0.5045104622840881,-2.0876271724700928,-0.13043253123760223,0.052627451717853546,-1.4100602865219116,0.039682406932115555,-0.07136271148920059,-0.08755512535572052,0.040015291422605515,-0.32150501012802124,-0.025322988629341125,-0.022044498473405838,-0.021716123446822166,0.002489269943907857,-0.023238876834511757,0.03398267552256584,0.0924159362912178,-0.08222655206918716,-0.01323671918362379,-0.024793392047286034,0.016832547262310982,0.014644309878349304,0.000906021858099848,-0.014736010693013668,0.16673476994037628,0.021829131990671158,0.021737568080425262,-0.025704465806484222,-0.0659344270825386,0.01398257166147232,-0.01676260121166706,4.290716648101807,-5.199350357055664,-4.778404712677002,-3.3627002239227295,-1.218158483505249,-0.26753440499305725,6.071636199951172,1.1529308557510376,-5.274954319000244,0.2298228144645691,-8.00147819519043,5.713593482971191,-4.928236961364746,2.134535551071167,0.022688686847686768,3.107790946960449,-0.09120162576436996,0.5948821902275085,0.7478659152984619,-2.2900068759918213,3.430983304977417,-8.395134925842285,0.3053300678730011,-2.6718223094940186,-2.645846366882324,-0.18096253275871277,-1.8570352792739868,4.983963489532471,0.11976354569196701,-0.02833407372236252,-2.435950756072998,1.091370701789856,-5.645595550537109,1.5871864557266235,-0.735862672328949,2.7046966552734375,-0.10374999791383743,1.7480109930038452,-5.79136323928833,-0.21353937685489655,-4.419276237487793,4.376718521118164,-6.384139060974121,0.10968029499053955,2.3028171062469482,0.013300255872309208,-6.390385150909424,1.7906674146652222,6.914032936096191,0.10587730258703232,5.7584428787231445,-1.2577629089355469,3.3405351638793945,-2.7747950553894043,0.09780062735080719,-2.781428337097168,0.006395415402948856,-0.9032006859779358,7.655502796173096,0.4433997869491577,-1.1682353019714355,0.31394803524017334,-0.1492220163345337,0.013214651495218277,0.0668528601527214,0.011471548117697239,3.335669755935669,0.016703622415661812,0.15110552310943604,0.6987196207046509,-1.9671878814697266,0.9621201753616333,-0.8640127778053284,-2.178788185119629,0.028114620596170425,-0.019760338589549065,0.02400796487927437,-0.03403688222169876,1.5807726383209229,0.01787199266254902,-10.332880020141602,-7.263532638549805,0.4969027638435364,0.078611820936203,-1.3338228464126587,-0.12900811433792114,3.537633180618286,-0.07756000757217407,-0.9793331623077393,1.3310941457748413,16.169918060302734,0.4566827416419983,1.2163312435150146,-3.9356842041015625,-0.029416032135486603,2.8915860652923584,-1.1862462759017944,-0.009185119532048702,-7.956912994384766,0.27262455224990845,1.22401762008667,0.11735574156045914,-0.04823652282357216,-0.035235319286584854,-0.059307049959897995,0.015636516734957695,-0.7358409762382507,0.01614643819630146,0.028373107314109802,-0.01203486043959856,0.33017978072166443,0.6486983299255371,0.018837379291653633,1.7037464380264282,0.0237997118383646,-0.06210950389504433,-0.06916265934705734,0.056942980736494064,-0.5281967520713806,-0.026373088359832764,1.2553941011428833,0.7791493535041809,-0.00724627822637558,0.047694653272628784,0.42364034056663513,0.006852798629552126,-2.9483351707458496,0.07619639486074448,0.09955649077892303,0.13478049635887146,0.16004350781440735,-0.7085514068603516,1.3560534715652466,5.632009029388428,0.02076832391321659,-0.30577078461647034,0.01605197787284851,-0.1989000290632248,0.4644475281238556,0.011051634326577187,0.48766791820526123,-5.709121227264404,1.364227294921875,-0.5384753942489624,-1.497463583946228,-0.9640906453132629,-0.9175611138343811,-1.5826495885849,-2.6816306114196777,0.3671162724494934,6.986617088317871,2.856394052505493,-1.3362921476364136,-11.066402435302734,-0.6245238184928894,4.957096099853516,-0.39159274101257324,1.4626984596252441,-2.89827823638916,0.8249151110649109,-0.03810308873653412,-0.001773980911821127,0.0035728984512388706,-0.0032796114683151245,0.03612326830625534,0.011089428327977657,-0.21566300094127655,-0.01748369261622429,-0.0016394437989220023,0.04436756670475006,0.1573878824710846,-0.016054226085543633,0.005723175592720509,0.03546100854873657,0.04615303501486778,-0.022068260237574577,-0.0022216583602130413,-0.04301471263170242,0.03344741463661194,-0.009818329475820065,2.6363747119903564,-0.22811126708984375,-0.2167530208826065,0.35006096959114075,0.09603038430213928,0.017922718077898026,2.578413248062134,0.41399672627449036,0.13750554621219635,-0.35907211899757385,-2.4147956371307373,-0.09588427096605301,-0.27276068925857544,2.7385635375976562,0.006935405544936657,-0.9906763434410095,-0.07111839950084686,-0.09662023186683655,-0.31306296586990356,-0.017461029812693596,-0.03845787048339844,0.0031978676561266184,0.002912356983870268,0.0008092366042546928,0.03620477020740509,-0.011528212577104568,-0.04548853263258934,-0.020085616037249565,0.0019512614235281944,0.056237757205963135,0.1391145884990692,-0.03311898186802864,-0.04444798454642296,-0.1566014140844345,0.001187708112411201,0.010047630406916142,0.0413682758808136,-0.06456558406352997,0.03167169168591499,0.019715992733836174,-0.07096397131681442,-0.16299410164356232,0.11847550421953201,-0.08994472026824951,-0.1412714421749115,0.0653742253780365,0.830459713935852,0.09776219725608826,-0.10343228280544281,-0.29079562425613403,-1.1505944728851318,0.06334476917982101,0.20053231716156006,-0.6067432165145874,0.022843778133392334,-0.18907059729099274,-0.14197681844234467,0.42490023374557495,-0.06932821124792099,-0.1524779349565506,8.416189193725586,2.9037914276123047,5.077467441558838,-5.029118061065674,-2.6016886234283447,-0.1015164777636528,5.008454322814941,-2.227437734603882,-3.954129457473755,1.2084611654281616,9.084562301635742,5.663625240325928,-0.4730667173862457,-5.2843241691589355,-1.2119446992874146,-2.3827364444732666,0.08607281744480133,3.0816667079925537,-13.35901927947998,-0.6642270088195801,-0.05436346307396889,0.13550516963005066,-0.32161232829093933,-0.036917999386787415,0.12244312465190887,-0.03892722725868225,-1.2856637239456177,0.10281666368246078,0.043855179101228714,0.06650426238775253,0.5681346654891968,-0.3001750111579895,-0.18756569921970367,0.5432637929916382,-0.004659251309931278,-0.06370179355144501,0.015735454857349396,-0.04234955087304115,0.04138997942209244,-0.41665133833885193]},"forgetBias":{"rows":20,"columns":1,"weights":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]},"outputMatrix":{"rows":20,"columns":1,"weights":[-5.367439270019531,-7.043824672698975,-2.684149980545044,-1.9665322303771973,-1.9570056200027466,-0.9427117705345154,3.7394120693206787,-2.344566583633423,2.3084652423858643,-3.4584875106811523,-7.2386579513549805,-0.8283336758613586,-2.779669761657715,5.813632488250732,-1.0896486043930054,-3.664407730102539,-2.321143865585327,-0.8141373991966248,-4.059814453125,2.4622201919555664]},"outputHidden":{"rows":20,"columns":20,"weights":[-9.712225914001465,-2.0944535732269287,4.88965368270874,-1.1862455606460571,-3.0615782737731934,0.8180841207504272,-6.211175441741943,2.856325149536133,-4.471823692321777,0.8302258253097534,-7.299651145935059,-8.03250789642334,-10.479545593261719,0.03146784380078316,0.910762369632721,9.273309707641602,-0.9411494731903076,-1.5476055145263672,-5.423105716705322,0.6810687780380249,-0.4045856297016144,7.1649932861328125,-0.09201359748840332,3.4215879440307617,1.711957573890686,-0.43843474984169006,1.197898030281067,2.464566946029663,1.7414054870605469,-8.32624340057373,-5.84348726272583,-2.389484167098999,-12.999727249145508,3.5308423042297363,0.7840836644172668,-2.1443307399749756,-0.1534997820854187,-2.107787847518921,3.7066102027893066,1.1877663135528564,9.12069320678711,-10.6448335647583,-15.81926155090332,3.125736951828003,9.587860107421875,0.9844938516616821,6.347492218017578,2.1585581302642822,3.4364256858825684,6.433598518371582,1.7625508308410645,-4.472792148590088,5.129713535308838,7.114428520202637,1.4337406158447266,-2.5008060932159424,1.0119200944900513,-3.8037121295928955,2.869333267211914,-0.22064854204654694,1.660200834274292,-6.9591593742370605,1.2977010011672974,2.512003183364868,4.023289680480957,0.08559438586235046,1.1752797365188599,1.7654080390930176,2.070157051086426,-1.6955312490463257,-2.6737232208251953,0.8169710040092468,1.7342439889907837,3.229410409927368,0.012954913079738617,-2.8638651371002197,-2.6786787509918213,-2.6702752113342285,0.38935908675193787,1.079865574836731,-0.07402650266885757,-5.576953411102295,2.268822193145752,1.4702420234680176,8.61961555480957,0.07680053263902664,3.788674831390381,-3.01577091217041,3.217038631439209,-1.892655611038208,-1.3076488971710205,1.9100182056427002,-0.548699676990509,1.9681750535964966,0.5527035593986511,-1.2988191843032837,-0.9023745059967041,1.7540961503982544,4.242450714111328,0.25565168261528015,-0.5127314329147339,-0.4417322278022766,0.0540722981095314,0.13543781638145447,0.6264164447784424,0.6655120253562927,-0.9123104214668274,-0.040320318192243576,0.6265720725059509,0.5418504476547241,-2.3068559169769287,-0.09570063650608063,-0.0756731629371643,3.9735684394836426,0.3762322664260864,-0.2607172727584839,-0.10884452611207962,-0.2469416707754135,1.9639776945114136,-0.07571634650230408,-2.361215829849243,-7.944104194641113,0.20333445072174072,-3.849552869796753,-2.7381398677825928,-1.3552687168121338,-8.448847770690918,-1.0942633152008057,-1.2193363904953003,-1.3646043539047241,-1.548234224319458,2.9552204608917236,-8.001091957092285,3.893734931945801,0.03603620454668999,15.67131233215332,1.5304975509643555,3.903257369995117,-0.2977815568447113,0.19963563978672028,-0.9539169073104858,-7.355842113494873,-0.5545111894607544,1.549781322479248,5.786971569061279,-0.463713139295578,-2.9165945053100586,3.8119707107543945,6.195923328399658,-0.18213403224945068,-1.9766427278518677,-7.276778221130371,0.2425914704799652,-2.3812994956970215,1.0452799797058105,-7.285411357879639,2.131605386734009,-3.4556033611297607,3.989145278930664,0.9038612842559814,-3.840196371078491,-0.06519658863544464,-2.4664649963378906,1.1033684015274048,1.76969313621521,0.5201876759529114,-0.2198442667722702,1.1824965476989746,4.320759296417236,0.319968581199646,-7.43588924407959,-0.9095345735549927,1.142284870147705,2.265284776687622,0.2635028064250946,0.2476307898759842,0.03254476934671402,-0.40012845396995544,5.254843711853027,0.16726063191890717,2.213397264480591,0.040995191782712936,-7.22614049911499,1.3067774772644043,8.530447006225586,0.4270448684692383,-5.784674167633057,2.322537899017334,7.576183795928955,4.813846588134766,6.768895626068115,-3.6790003776550293,3.6838431358337402,4.028913497924805,0.504282534122467,-3.608588218688965,1.518666386604309,-0.1256367564201355,-3.990654230117798,1.3433635234832764,-8.376989364624023,-4.622052192687988,3.134869337081909,-2.7658469676971436,-3.396271228790283,0.23641391098499298,-7.78647518157959,2.0851967334747314,-3.1223766803741455,4.6367950439453125,-5.271299362182617,-3.5203897953033447,2.1212401390075684,2.8901596069335938,1.7471657991409302,0.9213724732398987,-0.2837424576282501,-8.709443092346191,-3.3911707401275635,0.22366496920585632,-5.857359886169434,-9.148825645446777,-1.614776849746704,4.728672027587891,5.688797473907471,1.6450077295303345,-1.228593111038208,1.771716594696045,3.9321746826171875,1.5402626991271973,-8.1600341796875,-12.979605674743652,7.791233539581299,2.1143949031829834,1.5223309993743896,-4.346765518188477,-2.790433406829834,-2.9429028034210205,-4.718854904174805,1.903428316116333,0.842516303062439,6.028754234313965,-1.6048539876937866,2.928069829940796,-0.38247033953666687,-0.07825712114572525,30.234283447265625,4.079159736633301,5.788755416870117,-3.805047035217285,9.174710273742676,-7.315361976623535,-5.5661396980285645,0.4555979073047638,-0.5920273661613464,1.5689536333084106,-1.4766963720321655,1.8037939071655273,3.720951557159424,-0.01586056500673294,-8.081679344177246,10.370417594909668,-4.08322811126709,2.2813286781311035,4.002194881439209,-0.00040086189983412623,1.4809540510177612,-6.399572372436523,1.6022061109542847,9.449671745300293,6.519846439361572,-3.795682907104492,-8.047592163085938,-6.79139518737793,1.56096351146698,3.7209932804107666,3.3089046478271484,0.385387122631073,1.6691850423812866,0.8769152760505676,-0.7172515988349915,1.1424956321716309,-0.3080851137638092,0.2252776324748993,0.49901407957077026,-0.04163868725299835,-1.7464511394500732,-0.09912000596523285,0.3937246799468994,1.833251953125,0.6359431743621826,0.14890925586223602,0.19920605421066284,1.869268774986267,1.3808505535125732,-0.3918348252773285,0.1001497358083725,-0.34212449193000793,4.473480224609375,0.05386283993721008,-3.195722818374634,-4.464356899261475,1.857771635055542,0.25208374857902527,0.628723680973053,0.09008041024208069,4.2372541427612305,2.9872429370880127,-2.1554510593414307,-3.9756691455841064,-5.410742282867432,-1.2579318284988403,1.1086605787277222,-0.7734115719795227,-0.22033001482486725,-10.379829406738281,-3.342078685760498,-1.3718589544296265,-0.8090569376945496,0.13024310767650604,-0.6461297869682312,1.0539984703063965,-0.0826491042971611,0.10540232062339783,0.8198508620262146,0.31287842988967896,-4.118710994720459,-0.5839097499847412,0.17364054918289185,2.206127166748047,2.1457889080047607,-1.6320489645004272,-0.05525914579629898,6.24721097946167,0.3104824721813202,-2.2596168518066406,2.5139336585998535,-0.6024401187896729,1.1923843622207642,-0.3251538872718811,-4.446213722229004,0.4357198476791382,2.0973665714263916,4.20203161239624,10.870499610900879,0.6287745833396912,-0.06331826001405716,0.1744992434978485,11.901074409484863,-2.456646680831909,-3.331385374069214,-8.818024635314941,-2.803820848464966,-4.06024694442749,1.938042163848877,-1.3671666383743286,-1.5700602531433105,-6.67000150680542,11.465811729431152,1.3377593755722046,-5.24603271484375,1.7320499420166016,-2.683236598968506,-0.704039990901947,1.9649237394332886,1.782114028930664,6.618650436401367,3.5565428733825684,1.1840320825576782,-18.12430191040039,-0.9057145118713379,-1.1959142684936523,3.8062777519226074,1.8992035388946533,-0.5946363210678101,-2.644540309906006,2.217679023742676,9.959939002990723,7.732023239135742,2.8084490299224854,-1.122091293334961,-0.09109694510698318,0.8695270419120789,-0.534734845161438,0.09319261461496353,-0.3748938739299774,4.902454376220703,0.05284864455461502,-0.21015170216560364,1.530973196029663,-2.4556736946105957,0.4353114068508148,-0.5205795168876648,0.8662432432174683,0.13425983488559723,-0.5325246453285217,2.087771415710449,-0.5770896673202515,-1.9329289197921753,-0.42736274003982544]},"outputBias":{"rows":20,"columns":1,"weights":[7.579238414764404,14.28520679473877,6.037368297576904,-0.7307708859443665,-0.1433347910642624,-6.0476508140563965,-7.465461730957031,-2.956549644470215,-1.0128456354141235,6.751031875610352,20.43882179260254,-1.718753695487976,2.6264095306396484,-5.816686153411865,-6.478997707366943,-1.6032147407531738,0.6942317485809326,-9.03438949584961,7.278809070587158,-4.7742767333984375]},"cellActivationMatrix":{"rows":20,"columns":1,"weights":[-3.77032208442688,-4.351855278015137,0.9522339701652527,-1.986013650894165,-1.6691665649414062,-0.5341511368751526,2.0923430919647217,2.84474515914917,-2.5645716190338135,-1.2121824026107788,2.5878067016601562,0.23060177266597748,-0.5447880625724792,-2.531342029571533,-0.4474272131919861,0.877408504486084,-0.6190712451934814,0.5420344471931458,-1.9634507894515991,-1.2036951780319214]},"cellActivationHidden":{"rows":20,"columns":20,"weights":[-1.5243377685546875,0.8844628930091858,-0.16323275864124298,0.1509101688861847,1.118798851966858,0.29653531312942505,-2.2052576541900635,0.7275853753089905,0.6938177347183228,-1.6762765645980835,1.5292936563491821,-0.22101686894893646,1.0168883800506592,8.040616989135742,0.19961875677108765,-1.0908265113830566,-0.7225906848907471,-0.5287436246871948,2.389676570892334,-0.14233000576496124,-0.6264098286628723,-1.090509057044983,0.6116790175437927,-0.23220735788345337,-0.8227878212928772,-0.0011016468051820993,-1.5335233211517334,-0.5857821702957153,-2.108039617538452,-0.17470751702785492,-0.026078958064317703,-0.30840325355529785,0.6264463067054749,-4.379504203796387,0.014254950918257236,-1.0637166500091553,-0.038542214781045914,0.06171312555670738,-3.601555585861206,-0.1995081603527069,-0.7642408013343811,-0.19734613597393036,-0.5759022235870361,0.6972652077674866,0.5872935652732849,-0.025332018733024597,0.9990454316139221,-0.06813656538724899,-0.5887230634689331,-0.6570374965667725,-4.224672317504883,-1.3360333442687988,-0.34923166036605835,6.2383623123168945,-0.06144823879003525,0.18214276432991028,-0.06996773183345795,-1.1973131895065308,-1.860460877418518,-0.03155570104718208,-3.4723923206329346,0.6931855082511902,0.1708541065454483,0.5110883712768555,0.13173924386501312,-0.0025593657046556473,-4.063661575317383,0.4716707170009613,0.1490185558795929,0.06589628756046295,1.2964560985565186,-1.5924960374832153,0.5348906517028809,-2.1158931255340576,0.07257943600416183,-0.14063408970832825,0.05700284242630005,-0.5927034020423889,-1.7330390214920044,0.01911883056163788,-0.11859818547964096,-0.9565698504447937,-0.06755813956260681,-0.04074230417609215,-0.09173313528299332,-0.204645037651062,-1.95068359375,-0.563639760017395,0.25276318192481995,0.039815355092287064,1.0604215860366821,-0.3868616819381714,-0.2548319101333618,-1.9236090183258057,-0.08084238320589066,1.470258355140686,0.28980952501296997,-0.15604083240032196,-1.0807030200958252,-0.02791706845164299,-0.6952792406082153,0.878096342086792,-0.6655396819114685,0.10309803485870361,0.09265786409378052,-0.0322289802134037,-1.7077304124832153,-0.2664547264575958,0.2459980845451355,0.08801767230033875,2.906411647796631,-0.3565695881843567,-0.3381916284561157,-1.9576952457427979,-0.1825532764196396,0.45224857330322266,0.2373957633972168,-0.23358479142189026,-0.5539437532424927,0.1887635737657547,-0.003867086721584201,-0.10753875225782394,0.12108059227466583,-0.11837571859359741,-0.02249191328883171,0.15363946557044983,-0.12393612414598465,-0.05081150308251381,-0.14056715369224548,-0.09854693710803986,0.09717234969139099,-0.23775464296340942,0.37324681878089905,0.18976035714149475,0.038031261414289474,-0.02613358572125435,-0.22031055390834808,-0.08165769279003143,0.02088325284421444,-0.15319322049617767,-8.869795799255371,1.1111472845077515,-1.530099868774414,-0.22046944499015808,2.9337656497955322,0.32217806577682495,-7.271867752075195,0.7843819856643677,2.2042417526245117,2.349501132965088,11.399459838867188,-1.3194416761398315,0.20145700871944427,1.3451963663101196,0.11774090677499771,-0.1344793438911438,-0.33130383491516113,-0.17312659323215485,2.978477716445923,-0.3582231104373932,-4.855252265930176,1.2660335302352905,-8.627066612243652,3.2204997539520264,1.847108244895935,0.8816131949424744,-3.9174001216888428,0.22573839128017426,5.894730091094971,0.45875436067581177,6.245365619659424,-6.555520057678223,2.503307342529297,-5.250419616699219,-0.045333947986364365,-0.12873263657093048,0.06809449940919876,-1.3683600425720215,10.636301040649414,-0.15179120004177094,0.6930465698242188,0.2153298705816269,-0.12500764429569244,0.12795843183994293,-0.016804710030555725,-0.09875752776861191,-0.7141072154045105,0.3899063766002655,0.22962717711925507,0.004410552326589823,0.9153193831443787,-0.009537307545542717,-0.09484878927469254,1.723073959350586,-0.060841161757707596,0.0726039782166481,0.0838581770658493,0.023068731650710106,0.8234450817108154,0.08776713162660599,-4.732589244842529,-5.621984004974365,7.181280136108398,-4.9049530029296875,-4.7216796875,-0.48625096678733826,13.33514404296875,-3.0649187564849854,-6.55555534362793,-0.3652719259262085,7.7989935874938965,4.298949718475342,-4.320165634155273,-11.799064636230469,-1.26517653465271,4.89169979095459,0.05172490328550339,2.2319560050964355,-1.5546635389328003,0.07311156392097473,-2.188800811767578,1.1105059385299683,-4.38762092590332,-0.32784125208854675,0.8530687689781189,0.4098223149776459,0.5377452373504639,-0.37053900957107544,3.322521686553955,-0.7206863164901733,-3.728360176086426,0.24147439002990723,0.4849895238876343,6.784402370452881,0.11113495379686356,-1.0880804061889648,-0.22513720393180847,0.43389299511909485,4.714738845825195,-0.4069645404815674,1.336288332939148,0.5398080348968506,0.49077102541923523,0.13115456700325012,0.18325525522232056,-0.3981683850288391,-0.806152880191803,-0.8558971285820007,-1.6727792024612427,0.6564511060714722,5.181534767150879,0.7844588756561279,-0.08142691105604172,-7.0055718421936035,-0.3441654443740845,0.7494565844535828,0.31435421109199524,-0.009651686996221542,-8.307130813598633,0.08301088958978653,-0.228521466255188,-1.4503142833709717,1.1730456352233887,-0.2721380591392517,-0.355935662984848,-0.06150292232632637,3.2606258392333984,0.5334001779556274,-0.19649767875671387,-0.031744103878736496,-2.7720251083374023,0.29283231496810913,-0.6363208293914795,4.619906902313232,0.07793954759836197,-0.10518007725477219,-0.09206375479698181,-0.1862802505493164,-1.0521438121795654,0.27067673206329346,-0.09564147889614105,0.13300757110118866,-0.0991954356431961,0.09905676543712616,0.023482784628868103,-0.08905128389596939,-0.121433787047863,0.07825513929128647,0.07624748349189758,0.07714936882257462,0.6410748958587646,-0.0013959183124825358,-0.06036951765418053,-1.0108766555786133,-0.06581319123506546,-0.00400690408423543,0.12937945127487183,-0.17722082138061523,-0.019470008090138435,0.0946900025010109,2.549269437789917,0.7819674015045166,-0.6979806423187256,-0.09949276596307755,-0.1003841832280159,0.03711116313934326,2.630767345428467,-0.12068270891904831,0.9537938833236694,-0.07102134078741074,-1.1444873809814453,-0.1277647316455841,0.5629791021347046,7.429225444793701,-0.0009194367448799312,-0.343339741230011,-0.1860654652118683,0.43529653549194336,-0.47646164894104004,-0.19453290104866028,0.32278257608413696,0.023100249469280243,-0.04901690036058426,0.09810806810855865,-0.06652805954217911,-0.015640752390027046,0.025258703157305717,0.2503809630870819,-0.04340654984116554,-0.05820458009839058,-0.559029757976532,-0.18209294974803925,-0.6159083843231201,-0.2909056842327118,-0.047870390117168427,0.0456480048596859,0.10691370069980621,0.16956253349781036,0.1271841675043106,0.08931536972522736,5.09871768951416,-1.9264683723449707,1.8583197593688965,0.1849587857723236,-0.33412277698516846,0.6531018018722534,-0.9797651767730713,-0.3906331956386566,-0.10228973627090454,-0.15444673597812653,-5.683939456939697,1.0749257802963257,1.4884179830551147,6.737933158874512,0.20781873166561127,-0.6195149421691895,-0.3383106291294098,0.1798989325761795,-3.5199427604675293,-0.22941386699676514,-1.969240427017212,-2.683678388595581,-5.356616973876953,3.5452752113342285,-1.0338106155395508,0.4073772132396698,3.4932312965393066,3.3985300064086914,-0.3470313847064972,2.5727593898773193,4.963250160217285,-2.594883918762207,-1.256870985031128,-4.377821445465088,0.41475412249565125,1.1879889965057373,1.1549592018127441,1.579675316810608,2.5530967712402344,1.765414834022522,-0.23757468163967133,0.3387492001056671,0.06656598299741745,-0.31513720750808716,0.08941734582185745,-0.33383551239967346,-0.15219871699810028,-0.42510879039764404,0.015219668857753277,1.4580832719802856,2.3300962448120117,-0.5816812515258789,-0.31981930136680603,0.3350381851196289,-0.028420813381671906,-0.6517848372459412,1.5869394540786743,0.06591834872961044,0.6013418436050415,-0.18533946573734283]},"cellActivationBias":{"rows":20,"columns":1,"weights":[4.007272243499756,-0.15439237654209137,2.0428223609924316,2.0244832038879395,-1.4754884243011475,0.12454162538051605,1.1175631284713745,-1.0110833644866943,5.526362419128418,-1.3832906484603882,-11.001233100891113,3.467982292175293,-1.886760950088501,-0.33374840021133423,-0.540498673915863,1.10243558883667,-0.6768013834953308,0.38388898968696594,-0.8317512273788452,-0.19961637258529663]}}],"outputConnector":{"rows":1,"columns":20,"weights":[-0.5644906163215637,0.05623912066221237,1.027996301651001,-1.609174370765686,-1.895503044128418,-0.593600332736969,0.40834322571754456,-2.5461299419403076,-0.40046414732933044,2.6976158618927,-0.3691692650318146,0.926744818687439,-1.9680644273757935,1.630263328552246,-0.38268744945526123,4.997059345245361,1.054040551185608,5.331716537475586,-0.6879292726516724,-1.1527493000030518]},"output":{"rows":1,"columns":1,"weights":[2.6418726444244385]},"inputLookup":{"h":0,"d":1,"a":2},"inputLookupLength":3,"outputLookup":{"fthg":0,"ftag":1},"outputLookupLength":2};
  var output = [];
  var states = [];
  var prevStates;
  var state;
  var max = input.length + 1;
  for (var _i = 0; _i < max; _i++) {
    prevStates = states;
    states = [];
    states[0] = {
      name: 'forwardFn',
      left: undefined,
      right: undefined,
      product: new Matrix(1, 1)
    };
    states[1] = {
      name: 'multiply',
      left: json.hiddenLayers[0].inputMatrix,
      right: states[0].product,
      product: new Matrix(20, 1)
    };
    states[2] = {
      name: 'multiply',
      left: json.hiddenLayers[0].inputHidden,
      right: typeof prevStates[25] === 'object' ? prevStates[25].product : new Matrix(20, 1),
      product: new Matrix(20, 1)
    };
    states[3] = {
      name: 'add',
      left: states[1].product,
      right: states[2].product,
      product: new Matrix(20, 1)
    };
    states[4] = {
      name: 'add',
      left: states[3].product,
      right: json.hiddenLayers[0].inputBias,
      product: new Matrix(20, 1)
    };
    states[5] = {
      name: 'sigmoid',
      left: states[4].product,
      right: undefined,
      product: new Matrix(20, 1)
    };
    states[6] = {
      name: 'multiply',
      left: json.hiddenLayers[0].forgetMatrix,
      right: states[0].product,
      product: new Matrix(20, 1)
    };
    states[7] = {
      name: 'multiply',
      left: json.hiddenLayers[0].forgetHidden,
      right: states[2].right,
      product: new Matrix(20, 1)
    };
    states[8] = {
      name: 'add',
      left: states[6].product,
      right: states[7].product,
      product: new Matrix(20, 1)
    };
    states[9] = {
      name: 'add',
      left: states[8].product,
      right: json.hiddenLayers[0].forgetBias,
      product: new Matrix(20, 1)
    };
    states[10] = {
      name: 'sigmoid',
      left: states[9].product,
      right: undefined,
      product: new Matrix(20, 1)
    };
    states[11] = {
      name: 'multiply',
      left: json.hiddenLayers[0].outputMatrix,
      right: states[0].product,
      product: new Matrix(20, 1)
    };
    states[12] = {
      name: 'multiply',
      left: json.hiddenLayers[0].outputHidden,
      right: states[2].right,
      product: new Matrix(20, 1)
    };
    states[13] = {
      name: 'add',
      left: states[11].product,
      right: states[12].product,
      product: new Matrix(20, 1)
    };
    states[14] = {
      name: 'add',
      left: states[13].product,
      right: json.hiddenLayers[0].outputBias,
      product: new Matrix(20, 1)
    };
    states[15] = {
      name: 'sigmoid',
      left: states[14].product,
      right: undefined,
      product: new Matrix(20, 1)
    };
    states[16] = {
      name: 'multiply',
      left: json.hiddenLayers[0].cellActivationMatrix,
      right: states[0].product,
      product: new Matrix(20, 1)
    };
    states[17] = {
      name: 'multiply',
      left: json.hiddenLayers[0].cellActivationHidden,
      right: states[2].right,
      product: new Matrix(20, 1)
    };
    states[18] = {
      name: 'add',
      left: states[16].product,
      right: states[17].product,
      product: new Matrix(20, 1)
    };
    states[19] = {
      name: 'add',
      left: states[18].product,
      right: json.hiddenLayers[0].cellActivationBias,
      product: new Matrix(20, 1)
    };
    states[20] = {
      name: 'tanh',
      left: states[19].product,
      right: undefined,
      product: new Matrix(20, 1)
    };
    states[21] = {
      name: 'multiplyElement',
      left: states[10].product,
      right: states[2].right,
      product: new Matrix(20, 1)
    };
    states[22] = {
      name: 'multiplyElement',
      left: states[5].product,
      right: states[20].product,
      product: new Matrix(20, 1)
    };
    states[23] = {
      name: 'add',
      left: states[21].product,
      right: states[22].product,
      product: new Matrix(20, 1)
    };
    states[24] = {
      name: 'tanh',
      left: states[23].product,
      right: undefined,
      product: new Matrix(20, 1)
    };
    states[25] = {
      name: 'multiplyElement',
      left: states[15].product,
      right: states[24].product,
      product: new Matrix(20, 1)
    };
    states[26] = {
      name: 'multiply',
      left: json.outputConnector,
      right: states[25].product,
      product: new Matrix(1, 1)
    };
    states[27] = {
      name: 'add',
      left: states[26].product,
      right: json.output,
      product: new Matrix(1, 1)
    };
    for (var stateIndex = 0, stateMax = 28; stateIndex < stateMax; stateIndex++) {
      state = states[stateIndex];
      var product = state.product;
      var left = state.left;
      var right = state.right;

      switch (state.name) {
case 'forwardFn':
product.weights = _i < input.length ? input[_i]: prevStates[prevStates.length - 1].product.weights;
break;
        case 'multiply': //compiled from src/recurrent/matrix/multiply.js
          
            const leftRows = left.rows;
            const leftColumns = left.columns;
            const rightColumns = right.columns;
            // loop over rows of left
            for (let leftRow = 0; leftRow < leftRows; leftRow++) {
                const leftRowBase = leftColumns * leftRow;
                const rightRowBase = rightColumns * leftRow;
                // loop over cols of right
                for (let rightColumn = 0; rightColumn < rightColumns; rightColumn++) {
                    // dot product loop
                    let dot = 0;
                    // loop over columns of left
                    for (let leftColumn = 0; leftColumn < leftColumns; leftColumn++) {
                        const rightColumnBase = rightColumns * leftColumn;
                        const leftIndex = leftRowBase + leftColumn;
                        const rightIndex = rightColumnBase + rightColumn;
                        dot += left.weights[leftIndex] * right.weights[rightIndex];
                        
                        
                    }
                    product.weights[rightRowBase + rightColumn] = dot;
                }
            }
        
          break;
        case 'add': //compiled from src/recurrent/matrix/add.js
          
            for (let i = 0; i < left.weights.length; i++) {
                product.weights[i] = left.weights[i] + right.weights[i];
                
            }
        
          break;
        case 'sigmoid': //compiled from src/recurrent/matrix/sigmoid.js
          
            // sigmoid nonlinearity
            for (let i = 0; i < left.weights.length; i++) {
                product.weights[i] = 1 / (1 + Math.exp(-left.weights[i]));
                
            }
        
          break;
        case 'tanh': //compiled from src/recurrent/matrix/tanh.js
          
            // tanh nonlinearity
            for (let i = 0; i < left.weights.length; i++) {
                product.weights[i] = Math.tanh(left.weights[i]);
                
            }
        
          break;
        case 'multiplyElement': //compiled from src/recurrent/matrix/multiply-element.js
          
            const { weights } = left;
            for (let i = 0; i < weights.length; i++) {
                product.weights[i] = left.weights[i] * right.weights[i];
                
            }
        
          break;
      }
    }
    if (_i >= input.length - 1) { output.push(state.product.weights); }
  }
  return lookupOutput(output);
  function lookupInput(input) {
          var table = {"h":0,"d":1,"a":2};
          var result = [];
          for (var p in table) {
            result.push(Float32Array.from([input[p]]));
          }
          return result;
        }
  function lookupOutput(output) {
          var table = {"fthg":0,"ftag":1};
          var result = {};
          for (var p in table) {
            result[p] = output[table[p]][0];
          }
          return result;
        }

  function Matrix(rows, columns) {
    this.rows = rows;
    this.columns = columns;
    this.weights = zeros(rows * columns);
  }
  function zeros(size) {
    return new Float32Array(size);
}
  function softmax(matrix) {
    // probability volume
    const result = new Matrix(matrix.rows, matrix.columns);
    let maxVal = -999999;
    for (let i = 0; i < matrix.weights.length; i++) {
        if (matrix.weights[i] > maxVal) {
            maxVal = matrix.weights[i];
        }
    }
    let s = 0;
    for (let i = 0; i < matrix.weights.length; i++) {
        result.weights[i] = Math.exp(matrix.weights[i] - maxVal);
        s += result.weights[i];
    }
    for (let i = 0; i < matrix.weights.length; i++) {
        result.weights[i] /= s;
    }
    // no backward pass here needed
    // since we will use the computed probabilities outside
    // to set gradients directly on m
    return result;
}
  function randomFloat(min, max) {
    return Math.random() * (max - min) + min;
}
  function sampleI(matrix) {
    // sample argmax from w, assuming w are
    // probabilities that sum to one
    const r = randomFloat(0, 1);
    const w = matrix.weights;
    let x = 0;
    let i = 0;
    while (true) {
        x += w[i];
        if (x > r) {
            return i;
        }
        i++;
    }
}
  function maxI(matrix) {
    // argmax of array w
    const { weights } = matrix;
    let maxv = weights[0];
    let maxix = 0;
    for (let i = 1; i < weights.length; i++) {
        const v = weights[i];
        if (v < maxv)
            continue;
        maxix = i;
        maxv = v;
    }
    return maxix;
}
};
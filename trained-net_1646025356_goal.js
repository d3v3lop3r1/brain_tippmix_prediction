module.exports = function anonymous(rawInput
) {

  var input = lookupInput(rawInput);
  var json = {"type":"LSTMTimeStep","options":{"inputSize":1,"inputRange":0,"hiddenLayers":[20],"outputSize":1,"decayRate":0.999,"smoothEps":1e-8,"regc":0.000001,"clipval":5,"maxPredictionLength":100,"dataFormatter":{"indexTable":{},"characterTable":{},"characters":[],"specialIndexes":[]}},"hiddenLayers":[{"inputMatrix":{"rows":20,"columns":1,"weights":[-1.967477560043335,-2.08158016204834,2.335324764251709,-1.6150180101394653,0.7208662033081055,2.469456672668457,-1.3571652173995972,-2.7266013622283936,2.322762966156006,1.0087237358093262,2.4220008850097656,-1.3436827659606934,-2.0745575428009033,-1.4967093467712402,1.7997547388076782,2.122889280319214,2.4386181831359863,0.7230752110481262,-0.07323934137821198,1.4064942598342896]},"inputHidden":{"rows":20,"columns":20,"weights":[-0.2671678960323334,0.3605334758758545,-0.48790279030799866,-0.6620681285858154,0.2660605311393738,3.6320106983184814,-0.4160948395729065,-0.04417909309267998,2.445204257965088,-0.8097605109214783,0.07217519730329514,0.07618558406829834,0.263174831867218,0.36126840114593506,-0.14667421579360962,-0.11023315787315369,-1.3599066734313965,0.0430508628487587,-1.807894229888916,-0.4643826484680176,-0.6392855644226074,1.2011253833770752,-0.1579628735780716,-0.02349971793591976,-1.5467911958694458,2.716036558151245,-0.23550456762313843,-1.5121355056762695,1.971260905265808,0.1301504224538803,0.6468689441680908,1.405930519104004,1.0984225273132324,0.9169894456863403,-1.0962661504745483,1.0582177639007568,0.10164554417133331,-0.8112983107566833,-0.0755077376961708,1.8303732872009277,-1.6778124570846558,0.07443363964557648,-0.22076864540576935,-0.5245901942253113,-2.770792245864868,4.662457466125488,-0.7912803888320923,-1.0956566333770752,4.0382208824157715,1.1487005949020386,2.0118043422698975,1.2180949449539185,0.08286094665527344,1.5444538593292236,-2.177593469619751,1.58831787109375,1.316603422164917,-1.9179155826568604,0.7410394549369812,2.1728272438049316,-0.7982659339904785,1.1518967151641846,-0.7416145205497742,0.4452711343765259,-0.6657116413116455,2.993917465209961,0.29167160391807556,-0.5534291863441467,1.631826400756836,-0.9888903498649597,0.7686138153076172,0.4302486479282379,1.0223296880722046,0.5320596098899841,-0.4732905328273773,0.31023162603378296,-1.331739902496338,-0.41941148042678833,-2.1771044731140137,0.35280725359916687,0.8963893055915833,0.29794806241989136,-0.8650960922241211,0.11831573396921158,-1.9532511234283447,3.442201614379883,0.12506143748760223,1.2499586343765259,2.754378080368042,1.0527324676513672,-0.3053649365901947,-0.5414257049560547,-0.13668334484100342,-0.24049541354179382,1.3311210870742798,-1.1350164413452148,-0.9324491620063782,1.3665714263916016,-1.7741975784301758,0.17811205983161926,0.46585261821746826,-0.35937321186065674,-3.343411445617676,-0.7742515802383423,3.8278300762176514,-9.964848518371582,-0.529121458530426,3.6650774478912354,-5.591214179992676,-0.062033575028181076,-6.948875427246094,-0.4691627025604248,-0.8304141163825989,-0.502801239490509,1.4679622650146484,-1.6814218759536743,2.474810838699341,3.0899438858032227,2.470907688140869,-5.670447826385498,-0.6532379984855652,1.0597034692764282,-0.8680868744850159,0.4393959641456604,-0.2240082025527954,2.6141438484191895,0.4114815592765808,-0.3773742914199829,1.3912172317504883,-1.0235240459442139,0.36349809169769287,0.3730507493019104,0.823731541633606,0.4550487697124481,-0.5060640573501587,0.27815380692481995,-1.1193294525146484,-0.24114467203617096,-1.8256449699401855,0.08985211700201035,0.5646294951438904,0.21642357110977173,-0.3154619634151459,-0.4186716675758362,-1.748326063156128,5.268410682678223,-0.301554411649704,1.2480684518814087,5.364487648010254,1.9692330360412598,2.3584392070770264,0.12526336312294006,0.1220029965043068,0.24518010020256042,-1.1890100240707397,0.5563051700592041,0.7453759908676147,-1.7428369522094727,-0.19760370254516602,0.8241667151451111,0.43940281867980957,-0.9271247982978821,1.2036024332046509,-0.30235224962234497,2.2055232524871826,2.5090525150299072,-0.2830003499984741,0.44704553484916687,2.3524911403656006,2.3213107585906982,1.5531095266342163,-0.09987728297710419,-1.2520610094070435,-0.4018312990665436,0.044813793152570724,0.3664606809616089,-0.6730848550796509,-0.8004632592201233,-0.9086296558380127,0.7039822340011597,-2.1940653324127197,0.39048194885253906,0.2126729041337967,-0.008389447815716267,-8.136604309082031,1.6380923986434937,-0.3663443624973297,-3.107903480529785,1.1244027614593506,0.28482794761657715,5.309051036834717,2.4316482543945312,0.5488443374633789,1.4727897644042969,-4.464370250701904,3.431795597076416,-1.044629454612732,-4.834585666656494,-0.07810168713331223,6.928332328796387,0.4701298475265503,-0.3383389413356781,-0.6872170567512512,-0.3392521142959595,-4.1245222091674805,6.091574668884277,-0.20613551139831543,-0.26718375086784363,5.248598575592041,1.5116344690322876,2.939438581466675,0.03590996935963631,-0.332462340593338,0.21393507719039917,-0.10281571745872498,0.058296650648117065,-0.40337640047073364,-2.1330249309539795,0.5673568248748779,2.05202317237854,-0.08317619562149048,-0.09157454967498779,-0.4891984760761261,-0.31078818440437317,0.606280505657196,3.907135248184204,-0.2784839868545532,0.34593668580055237,2.1773626804351807,-1.0628304481506348,-0.2937583923339844,-0.9015029072761536,-0.23103098571300507,0.44085994362831116,0.5491873621940613,-0.26792001724243164,-0.7453523278236389,0.82462078332901,-0.7300534248352051,-1.491802453994751,-1.163800597190857,1.4479873180389404,0.3818615972995758,-0.27715423703193665,-1.2512507438659668,2.9909539222717285,-0.5518664121627808,-1.4486331939697266,2.0295135974884033,0.22021456062793732,0.8908880352973938,1.345210313796997,1.4917367696762085,0.925118088722229,-1.4603298902511597,1.1990690231323242,-0.22157400846481323,-0.9618824124336243,-0.4851875603199005,1.7777153253555298,-0.16322307288646698,0.08496052026748657,-0.6169666647911072,-0.12971091270446777,0.3080121874809265,3.426271915435791,0.061478693038225174,0.3625458776950836,1.7059929370880127,-0.6601540446281433,-0.25024837255477905,-0.03546658158302307,-0.2970009446144104,-0.07330892235040665,0.03742194175720215,-0.45918500423431396,0.16254225373268127,0.2298388034105301,-0.07282888144254684,-0.5807501673698425,-0.05804017558693886,0.7161448001861572,-0.44320401549339294,-0.6697977185249329,-0.1853800266981125,5.231231212615967,-0.4882011115550995,0.766413688659668,4.8065185546875,-0.6339375376701355,-0.036822251975536346,-0.27893826365470886,0.4162883758544922,0.5591781139373779,0.031451236456632614,-0.33160924911499023,-0.17693358659744263,0.28757625818252563,-0.4861052334308624,-0.5081921219825745,0.32071903347969055,0.4766106903553009,-0.42559874057769775,-0.2395453155040741,-0.2225414514541626,5.658667087554932,-0.16331042349338531,0.7389962077140808,5.4666643142700195,-0.23479191958904266,0.17029671370983124,-0.3329085111618042,0.2611895799636841,-0.07569003850221634,0.4235055148601532,-0.6947104930877686,0.7414126992225647,0.10203912109136581,-0.6165330410003662,-0.5221455097198486,-0.7755285501480103,0.4354552924633026,0.5814546346664429,-0.16404885053634644,-4.434561252593994,4.294595718383789,-0.37168511748313904,-2.6618428230285645,4.904270648956299,2.8353641033172607,3.469569206237793,1.2591036558151245,0.3927980661392212,0.8196409940719604,-2.9350554943084717,2.3182613849639893,-1.1032742261886597,-4.09527587890625,-0.25300344824790955,5.318329811096191,0.5711033940315247,-0.271167516708374,-0.7450811266899109,-0.27439579367637634,-2.5882937908172607,3.7207045555114746,-0.08856276422739029,0.4721745252609253,2.976372480392456,0.5738083124160767,1.7519450187683105,-0.21741119027137756,-0.27107682824134827,0.0021289901342242956,0.5336087942123413,-0.3542284667491913,-0.40722793340682983,-1.1879963874816895,-0.0670289546251297,0.9131708741188049,-0.18348518013954163,1.1335924863815308,-1.238615870475769,-0.31945177912712097,-0.10775904357433319,7.39471960067749,-0.4404313266277313,-0.8624675869941711,0.7857536673545837,-3.3588643074035645,1.1147629022598267,0.34259048104286194,0.9966378808021545,0.2324816882610321,1.5544438362121582,-0.47474783658981323,-6.460763454437256,-0.43704211711883545,-6.754640102386475,0.5973591208457947,0.7020617127418518,0.2768116295337677,-1.16706383228302,0.1458837389945984,-0.9289335012435913,6.653547763824463,0.1152549535036087,0.36111578345298767,4.404378890991211,0.19377945363521576,0.43238916993141174,-0.09276968240737915,-0.09698963165283203,-0.1434839516878128,1.101431131362915,-0.6603336334228516,0.8645429611206055,0.5340985655784607,0.6772055625915527,0.3577163517475128]},"inputBias":{"rows":20,"columns":1,"weights":[0.23071791231632233,-3.1988558769226074,1.0047125816345215,-0.4140459895133972,5.25511360168457,-7.923888683319092,-1.1793755292892456,4.413228988647461,3.4268290996551514,4.3391876220703125,4.235398292541504,-0.755068302154541,-3.033747434616089,-1.3539061546325684,3.7818660736083984,3.186954975128174,-3.2739155292510986,4.120471477508545,3.6918342113494873,4.198065757751465]},"forgetMatrix":{"rows":20,"columns":1,"weights":[-0.059462398290634155,0.8303213715553284,2.060682535171509,0.2593492269515991,1.1840898990631104,-1.1682467460632324,0.19518356025218964,-1.9689429998397827,-0.9908998012542725,2.4308207035064697,-2.8723015785217285,-1.1448596715927124,0.9079253673553467,-0.7359455227851868,-0.29190945625305176,-0.7647696137428284,2.477433681488037,-2.2717583179473877,2.259045124053955,-2.2934157848358154]},"forgetHidden":{"rows":20,"columns":20,"weights":[-0.5611100196838379,0.1371835619211197,0.2629716694355011,-0.040675632655620575,-0.39645618200302124,0.7266474962234497,-0.013389069586992264,0.01016534399241209,0.5270200967788696,0.24516534805297852,0.15969960391521454,0.3292456269264221,0.10723702609539032,0.4015900790691376,-0.2777707874774933,0.20286443829536438,-0.2967349588871002,-0.12012334913015366,-0.29250967502593994,0.2150992751121521,-0.1618710160255432,-0.3250705301761627,0.5905652642250061,0.30259567499160767,-0.5271373391151428,1.5715937614440918,0.19178518652915955,-0.6360876560211182,1.3874759674072266,0.9886254668235779,0.22355985641479492,0.303030788898468,-0.4162549078464508,0.026990054175257683,-0.3719843924045563,0.35508498549461365,0.5292124152183533,-0.06327158212661743,0.19966693222522736,0.6646348237991333,-0.6969371438026428,0.011612385511398315,0.3391023278236389,0.24551232159137726,-0.5831324458122253,-0.3926168978214264,0.20712314546108246,-1.0462872982025146,0.2194328010082245,0.7114171981811523,0.47660544514656067,0.6262717247009277,0.21500718593597412,0.2493533343076706,-0.9301621913909912,0.8314967155456543,0.5564329028129578,-0.495625376701355,0.6296659111976624,1.0963774919509888,-0.352701872587204,0.8081366419792175,-0.3362257480621338,0.2653864026069641,-0.07219184935092926,0.7115716338157654,0.32135066390037537,-0.2847704291343689,0.9211572408676147,-0.3571905791759491,0.314920037984848,0.2620571553707123,0.917733907699585,0.1305260807275772,-0.352015882730484,0.46685341000556946,-0.8141920566558838,-0.20200106501579285,-0.7772107124328613,0.38805049657821655,-0.04938061907887459,-0.3282648026943207,0.2931826114654541,-0.10742056369781494,-0.05005276948213577,-1.747859239578247,-0.2419295459985733,-0.21818779408931732,-1.749817132949829,0.19932129979133606,0.0429193340241909,0.1869041621685028,-0.5376654267311096,0.1852826178073883,-0.2526455819606781,-0.044533200562000275,0.34943559765815735,-0.04740961268544197,0.2563990652561188,0.0018472803058102727,-0.8722364902496338,0.2071252465248108,0.4727029800415039,-0.47886672616004944,3.067936897277832,-4.614778518676758,-0.28587791323661804,0.9939707517623901,-10.501283645629883,-1.6781132221221924,-2.6258280277252197,0.19086992740631104,0.3705790638923645,0.8900536298751831,-0.3721277713775635,-0.3635261356830597,1.3227810859680176,1.9044256210327148,-0.9401387572288513,-2.465029716491699,-0.3337874114513397,0.8177862167358398,-0.18943056464195251,0.2938012182712555,-0.16786742210388184,0.6118978261947632,0.4027818739414215,-0.3111972510814667,0.9278273582458496,-0.28551676869392395,0.6295033097267151,0.67753005027771,0.7501592636108398,0.23087863624095917,-0.33802658319473267,0.4911377727985382,-0.7483018040657043,-0.5966233015060425,-0.6861715912818909,0.3940412402153015,0.14525911211967468,0.18412569165229797,-0.2715352475643158,0.2297443151473999,0.2636536657810211,-0.46076759696006775,0.16106365621089935,0.1769072562456131,-0.6934534907341003,-0.4294469952583313,-0.21439482271671295,-0.20284484326839447,0.19956563413143158,-0.08570139110088348,0.20686891674995422,-0.3212536871433258,-1.0222138166427612,0.2846778631210327,-0.9825740456581116,-0.47032907605171204,-0.26457762718200684,0.2076004296541214,-2.1777007579803467,-0.3182935118675232,-3.6733596324920654,-5.374083995819092,-0.3445034325122833,-0.4470497965812683,-4.452965259552002,-4.685297966003418,4.240755558013916,0.28497055172920227,0.26198434829711914,0.6663581728935242,-0.19833199679851532,0.3309117555618286,-8.51720905303955,-2.948227882385254,-3.351686716079712,3.536775827407837,-1.3877568244934082,-0.33211803436279297,1.09700345993042,-0.25041109323501587,-0.7702279686927795,1.5145461559295654,-0.20299500226974487,-1.1815884113311768,2.0227408409118652,1.5483222007751465,0.39653801918029785,0.2827175259590149,-0.13456343114376068,0.44664373993873596,-1.617030143737793,1.481598138809204,1.2469563484191895,-0.4131523370742798,0.9424138069152832,1.4501286745071411,-0.05240054056048393,0.2633659839630127,-0.10084088891744614,-0.11443006992340088,0.09183333069086075,-1.6216262578964233,-0.12544246017932892,-0.04988107830286026,-1.7570867538452148,-0.607995867729187,-0.020143959671258926,0.1930050104856491,0.09128564596176147,0.13839782774448395,0.07437831908464432,0.03244905546307564,-0.06735561043024063,-0.027611469849944115,0.20022651553153992,-0.18588487803936005,0.05923548340797424,0.444096177816391,-0.18861347436904907,0.1155834048986435,-0.12866559624671936,0.0999804362654686,0.15728691220283508,0.12913386523723602,0.03491602838039398,-0.4486701190471649,0.06734544783830643,0.03625788167119026,-0.19672846794128418,-0.030243808403611183,0.19101524353027344,-0.058585066348314285,-0.35978367924690247,-0.04872259125113487,-0.6430341005325317,-0.08133964240550995,-0.13635630905628204,-0.09948918223381042,0.40346193313598633,0.23083026707172394,-0.3321208655834198,1.2710024118423462,0.2712939381599426,-0.632782518863678,1.1875988245010376,0.8527225852012634,0.2180842012166977,0.2954711616039276,-0.31149837374687195,0.0868234857916832,-0.15636415779590607,0.39350420236587524,0.4285690188407898,-0.06573322415351868,0.2213701456785202,0.5814380645751953,-0.365855872631073,0.006826605182141066,-0.08749525249004364,0.18262864649295807,-0.2654842734336853,-0.046855226159095764,0.19726262986660004,0.2081151306629181,-0.21463806927204132,-0.09724448621273041,0.07872779667377472,0.07670008391141891,-0.35252344608306885,0.23776082694530487,-0.16463227570056915,0.044934604316949844,-0.21684235334396362,0.0530797578394413,-0.3773556053638458,0.051344722509384155,-0.2008587270975113,0.3478134870529175,-0.0016660913825035095,-0.13579636812210083,0.0858863964676857,0.5084831118583679,-0.09721354395151138,-0.015371423214673996,-0.055430542677640915,-0.24106541275978088,0.056977346539497375,0.25496140122413635,0.19197909533977509,0.17975017428398132,-0.023568816483020782,-0.23257401585578918,-0.8297435641288757,0.061559341847896576,-0.6081620454788208,-0.17579539120197296,0.5231761932373047,0.49039167165756226,-0.44125357270240784,0.2777465879917145,0.2333536595106125,-0.6340035796165466,0.3159421384334564,0.07551205158233643,-0.6069560647010803,-0.6564117074012756,-0.028507858514785767,-0.07578981667757034,0.47927045822143555,-0.27874755859375,0.4827413558959961,-0.5313920378684998,-0.6819990277290344,0.08071254193782806,-0.5331917405128479,-0.38987305760383606,-0.5071812868118286,-0.22716788947582245,0.8348658084869385,0.29856348037719727,-1.2009637355804443,2.5480852127075195,0.10831776261329651,-1.1537500619888306,3.1973001956939697,1.9926695823669434,0.3471546471118927,0.35985609889030457,-0.2852756083011627,0.28630760312080383,-1.0641618967056274,0.9932762980461121,2.319401264190674,-0.28742244839668274,2.092726469039917,1.6171568632125854,0.15765297412872314,0.36764973402023315,-0.32756733894348145,-0.001351453480310738,-0.1292446404695511,0.6743097901344299,-0.09795339405536652,-0.012029309757053852,0.33260098099708557,-0.8642816543579102,0.16905270516872406,0.11596265435218811,0.10901344567537308,0.05692192539572716,0.270714670419693,-0.15347763895988464,-0.7968887090682983,-0.07234879583120346,-0.6592288613319397,-0.1236497163772583,-0.4630360007286072,-0.3152637779712677,0.8444536328315735,0.1570640206336975,-1.360538125038147,3.99601674079895,0.10505186021327972,-1.0964826345443726,3.212029218673706,2.082632064819336,1.3477169275283813,0.34498798847198486,-0.37740665674209595,0.22847296297550201,-0.9435177445411682,0.8288204073905945,0.6059914231300354,-0.25972166657447815,-0.8399165868759155,2.9064717292785645,0.15450096130371094,0.14869512617588043,-0.3268881142139435,0.017034295946359634,0.21290762722492218,-2.3691303730010986,-0.005784285254776478,0.09170853346586227,-2.272204637527466,-0.8177397847175598,-0.2443408966064453,0.11779893189668655,0.10024454444646835,0.01829526200890541,0.3696986138820648,-0.2934350371360779,-0.6470133066177368,0.11095703393220901,-0.6208081245422363,-0.9201295375823975]},"forgetBias":{"rows":20,"columns":1,"weights":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]},"outputMatrix":{"rows":20,"columns":1,"weights":[-2.151923894882202,1.3883724212646484,-2.797034740447998,-1.8332933187484741,-2.973853826522827,1.0245907306671143,-1.4368596076965332,-2.5432605743408203,-0.9214076399803162,-2.932016611099243,-2.8486855030059814,-1.2982648611068726,1.1900345087051392,-1.3685581684112549,-2.8048083782196045,-2.681124448776245,0.6691811680793762,-3.1335561275482178,1.6695256233215332,-2.7773358821868896]},"outputHidden":{"rows":20,"columns":20,"weights":[-0.3384936451911926,0.44249963760375977,-0.43327784538269043,-0.6715726256370544,0.17460982501506805,3.6928393840789795,-0.27804937958717346,-0.10802894085645676,2.277285099029541,-0.6656495332717896,0.16786539554595947,0.16636718809604645,0.2446412444114685,0.42325150966644287,-0.15784522891044617,-0.16222035884857178,-1.3919949531555176,0.07166364043951035,-1.902506709098816,-0.46718668937683105,-1.1816953420639038,0.00040320446714758873,1.304948091506958,-0.14489005506038666,-1.6474723815917969,2.453453540802002,-0.2802073061466217,-1.8611993789672852,1.705399990081787,2.6359245777130127,0.024866858497262,1.1709579229354858,-0.19194087386131287,0.8493937849998474,-1.883726716041565,1.4791667461395264,2.165058135986328,-0.09716998785734177,1.780275583267212,2.0554897785186768,-0.7476648688316345,0.5743482708930969,-0.5649521350860596,-0.08080978691577911,-2.8500077724456787,0.850777804851532,-0.046758171170949936,0.5793520212173462,5.721765041351318,0.8548030853271484,1.8517557382583618,0.8791543245315552,0.7686062455177307,0.31845954060554504,-1.7506434917449951,0.9317408800125122,1.374645709991455,-2.5950493812561035,1.6563045978546143,3.237199068069458,-0.9651631116867065,1.1810197830200195,-0.20933139324188232,0.21188463270664215,-1.0435125827789307,3.5248122215270996,0.14506733417510986,-0.8399192094802856,2.241490125656128,-0.43275880813598633,1.1268359422683716,0.6517957448959351,1.169251799583435,0.9458692073822021,-0.7958499789237976,0.7394965291023254,-1.3193806409835815,-0.6423921585083008,-2.2120909690856934,0.6695788502693176,0.8661811351776123,0.706322431564331,-2.418743133544922,-0.04485180601477623,2.8908684253692627,2.995310068130493,0.18710283935070038,3.913367986679077,4.978543281555176,-3.99544358253479,-3.5149829387664795,-1.0000118017196655,0.10648798942565918,-0.4562374949455261,3.551581621170044,-2.9869778156280518,2.204423189163208,3.6666433811187744,-0.20168958604335785,-4.547083377838135,0.24865075945854187,-3.8218278884887695,-4.0323381423950195,-1.3731091022491455,4.347149848937988,-4.521409511566162,-0.9500311017036438,6.204616069793701,-5.954046249389648,-0.7241553068161011,-9.227463722229004,0.7433868050575256,-3.4732418060302734,-0.07374957948923111,1.839533805847168,-2.3925516605377197,1.5890514850616455,5.1953301429748535,2.2793569564819336,-7.252259254455566,-0.8996301293373108,0.9402784705162048,-0.17257125675678253,0.24257011711597443,-0.47480523586273193,2.8524746894836426,0.09692509472370148,-0.5520522594451904,1.9639312028884888,-0.40085965394973755,0.6088768839836121,0.5306499600410461,0.9522092938423157,0.825764000415802,-0.6385471820831299,0.6177899837493896,-1.024366021156311,-0.494286447763443,-1.6871970891952515,0.5720231533050537,0.039702992886304855,0.43356701731681824,0.10908670723438263,0.13691088557243347,-1.8588932752609253,4.8206939697265625,0.20261794328689575,1.0009303092956543,5.230570316314697,2.357759952545166,2.5280601978302,0.3140536844730377,-0.009960012510418892,0.03107837587594986,-1.4528688192367554,0.8243507742881775,1.0504070520401,-1.973711371421814,0.023920739069581032,1.035115122795105,-0.9262384176254272,-2.524235486984253,3.4440810680389404,-0.1443081498146057,0.6518646478652954,0.8947305679321289,-0.45796775817871094,2.356832265853882,-0.2982030212879181,3.52939510345459,-5.189611434936523,1.0000437498092651,-2.2320926189422607,0.6173245310783386,-1.637484073638916,2.121222734451294,6.061366081237793,2.6053342819213867,5.382221221923828,-1.5475066900253296,-0.5718778371810913,-0.0830448567867279,-1.2872296571731567,0.2122827023267746,-5.624815940856934,5.656741619110107,-0.004981556907296181,0.6045620441436768,4.391339302062988,-1.1563814878463745,2.2658450603485107,0.27997562289237976,0.1595194786787033,0.26387834548950195,-0.20026636123657227,-0.15588106215000153,-0.9638450741767883,-1.240754246711731,-1.865656852722168,3.6550512313842773,0.561039924621582,-0.15308251976966858,-1.7167764902114868,-0.25831905007362366,0.55815190076828,1.7489944696426392,-0.12048210203647614,2.800490379333496,4.93242883682251,-0.29498767852783203,-0.11112219095230103,0.3416118919849396,-0.1966370940208435,-0.1557488590478897,-0.36315762996673584,-0.3588670492172241,1.2357234954833984,-0.26128995418548584,2.6995623111724854,-1.9811983108520508,-0.061247315257787704,-0.08778102695941925,-0.5348092913627625,-0.29086950421333313,0.746330738067627,3.6929049491882324,-0.3227480351924896,0.427177369594574,2.0481817722320557,-1.0972661972045898,-0.43115463852882385,-1.229901909828186,-0.15304118394851685,0.3640722334384918,0.5596048831939697,-0.29961708188056946,-0.6918835043907166,0.8283172845840454,-0.821033775806427,-1.41452956199646,-1.4176174402236938,-0.024859458208084106,1.31953763961792,-0.1253046840429306,-1.5336796045303345,2.110285758972168,-0.24084873497486115,-1.836708664894104,1.3795889616012573,2.2481017112731934,0.14097481966018677,1.3661949634552002,-0.10558857023715973,1.013726830482483,-1.9436132907867432,1.4844467639923096,1.9151453971862793,-0.22047941386699677,1.6031826734542847,2.019320249557495,-0.5368359684944153,0.1543530523777008,-0.3299699127674103,-0.15278737246990204,0.25076815485954285,3.711519956588745,0.04634625092148781,0.2267564833164215,1.8059779405593872,-0.5048472881317139,-0.1496545374393463,0.03581322357058525,-0.31817957758903503,0.07378871738910675,-0.06987769901752472,-0.31441763043403625,0.13331158459186554,0.20745770633220673,-0.2732219696044922,-0.53519606590271,0.07981032133102417,0.9323524236679077,0.5047786831855774,-0.18804305791854858,-1.4273613691329956,3.116164445877075,-0.07815713435411453,0.04288069158792496,5.289290428161621,0.24332615733146667,1.2376627922058105,-0.17036719620227814,0.5000045299530029,0.24293138086795807,-0.5325658321380615,0.1734720915555954,0.6660861968994141,-0.8958297371864319,0.9179861545562744,1.6479500532150269,-0.013551520183682442,0.7776192426681519,0.6163591146469116,-0.049856286495923996,-1.1951998472213745,2.238919258117676,-0.021586211398243904,-0.29078713059425354,5.354222774505615,0.660197913646698,1.2925231456756592,-0.04331999272108078,0.3778228759765625,0.3298492431640625,-0.4948846697807312,0.13533301651477814,1.3260927200317383,-1.1520166397094727,0.9810066819190979,1.4994251728057861,-2.0201945304870605,1.0314598083496094,0.8660445809364319,0.6225606799125671,-7.5817742347717285,2.64198637008667,0.13253748416900635,-8.757030487060547,4.0802836418151855,4.1455769538879395,3.4448161125183105,2.949127674102783,0.7342626452445984,1.3283308744430542,-6.877811431884766,4.702457427978516,0.23425355553627014,-6.748859405517578,1.0234131813049316,5.819857120513916,0.8911165595054626,0.0006173421279527247,-1.8473237752914429,-0.17168915271759033,0.7030083537101746,4.789184093475342,-0.05861050635576248,2.6812870502471924,4.437174320220947,-1.3360528945922852,-0.8215740919113159,-0.5857530236244202,-0.1638064980506897,-0.16140983998775482,0.936456024646759,-0.8535191416740417,0.8118476867675781,0.5311456322669983,0.19588406383991241,-1.690672516822815,-1.1456553936004639,-0.05438591167330742,5.392723560333252,-0.11497681587934494,-2.9779398441314697,6.088073253631592,-0.09836550056934357,0.14683635532855988,1.641065239906311,7.328558921813965,0.20053140819072723,1.582607388496399,-0.028965337201952934,0.7736148238182068,-5.0129008293151855,4.103525638580322,0.9641874432563782,-1.0714433193206787,-1.3006525039672852,2.2644028663635254,1.274897813796997,0.3461623191833496,-4.049683570861816,-0.16793909668922424,1.9051038026809692,1.6741052865982056,0.05881475284695625,5.803907871246338,3.876556634902954,-3.344754219055176,-1.2068934440612793,-0.6526001691818237,0.14844927191734314,-0.3650236427783966,3.298786163330078,-3.672881603240967,1.3762702941894531,2.5524826049804688,2.4817681312561035,-0.0340590626001358]},"outputBias":{"rows":20,"columns":1,"weights":[0.01858593337237835,-4.567609786987305,2.26206374168396,-0.5629850029945374,3.343991279602051,-3.696270704269409,-1.1892722845077515,4.318624019622803,-0.06095819175243378,3.83961820602417,3.4292819499969482,-0.687993049621582,-4.337701797485352,-1.3027647733688354,1.623090147972107,1.0612316131591797,-1.3210334777832031,1.9604706764221191,-3.0426089763641357,4.342211723327637]},"cellActivationMatrix":{"rows":20,"columns":1,"weights":[-0.6198219060897827,-0.7513490915298462,-0.0290127694606781,0.8543154001235962,0.1932615041732788,-2.138288736343384,0.4510313868522644,1.7203165292739868,-0.7374839782714844,1.045493721961975,-2.2430596351623535,0.5754883289337158,-0.8710228204727173,0.3773883879184723,-1.7404989004135132,2.1586005687713623,2.507829427719116,1.4055203199386597,1.9600874185562134,0.8723437786102295]},"cellActivationHidden":{"rows":20,"columns":20,"weights":[-0.3594149649143219,-0.799353301525116,0.18223422765731812,-0.07488058507442474,-0.2183033972978592,-1.3744806051254272,-0.1529223769903183,0.25572237372398376,-1.1738345623016357,0.41621795296669006,-0.48547348380088806,-0.39312461018562317,-0.6942207217216492,-0.14057105779647827,-0.14584289491176605,-0.07694608718156815,1.1250298023223877,0.21729400753974915,1.0423951148986816,-0.6115264892578125,0.9331017136573792,0.04227561876177788,-0.8446322679519653,0.19905157387256622,1.1673234701156616,-1.3433518409729004,0.22446633875370026,0.8934552669525146,-2.062603235244751,-1.6932787895202637,-0.5451093912124634,-0.6612921357154846,0.08760352432727814,-0.7345260977745056,1.194032073020935,-1.0129064321517944,-1.0906407833099365,0.6164710521697998,-0.9161715507507324,-1.1417547464370728,-0.6453247666358948,0.5970373153686523,-0.4018084406852722,0.663925290107727,-1.5612609386444092,2.364579439163208,0.6348292827606201,-1.1129080057144165,4.100264072418213,0.06274861842393875,1.1298224925994873,0.9976111650466919,0.7291500568389893,0.30997371673583984,-1.224181890487671,0.9828348159790039,2.9119839668273926,-1.7205859422683716,2.187997579574585,2.5045628547668457,0.36903876066207886,-0.7249301671981812,0.6509219408035278,-0.5514690279960632,0.47681745886802673,-0.7010825872421265,-0.5274823307991028,0.25592175126075745,-1.7843592166900635,0.4519701600074768,-0.41728463768959045,-0.2761225998401642,-0.6573897004127502,-0.21936452388763428,0.5662311315536499,-0.6410472393035889,0.6614208221435547,0.2677518427371979,0.7233630418777466,-0.5819958448410034,-0.45535752177238464,-1.1642301082611084,2.6638424396514893,-0.2208055853843689,0.16082096099853516,-1.3115137815475464,-0.4986923336982727,-1.1277942657470703,0.8412950038909912,4.411006450653076,0.4737246334552765,0.5398827195167542,-1.2035335302352905,0.43596214056015015,-2.2055435180664062,0.8717455267906189,7.246060371398926,-1.3195230960845947,7.1098527908325195,0.46646323800086975,-0.24858640134334564,2.0946106910705566,-1.8672174215316772,0.6709282994270325,-0.6912264823913574,5.063912391662598,0.8549053072929382,0.439450740814209,6.157558917999268,-2.503312110900879,0.2717944383621216,0.632041871547699,1.5397343635559082,0.7516142725944519,0.1851339489221573,-0.5094633102416992,-4.420797824859619,-0.3707117736339569,-5.45638370513916,-0.2591736614704132,0.5485812425613403,-0.5774164795875549,0.3866012394428253,-0.5751231908798218,0.6550981998443604,-1.0208032131195068,-0.4804789125919342,0.4434221386909485,-2.02502703666687,0.06143936142325401,-0.5054479241371155,-0.44449466466903687,-0.5939686894416809,-0.2864115238189697,0.7947648167610168,-0.8478410243988037,0.22461560368537903,0.5851954221725464,0.2539447844028473,-0.7433702349662781,-0.4950169026851654,-0.8987587094306946,1.7607781887054443,-0.7268995046615601,-2.2880301475524902,-2.1796746253967285,-0.8519532680511475,-1.0516555309295654,-0.3360103368759155,3.3103809356689453,1.6103794574737549,0.8318095803260803,-0.8319388031959534,0.3341735899448395,-1.417428970336914,1.1703813076019287,8.785741806030273,-2.1199991703033447,8.807132720947266,2.659992218017578,1.3919367790222168,3.518573760986328,-1.5860916376113892,0.26672062277793884,5.394776821136475,2.081918478012085,0.7019516825675964,1.2206337451934814,2.230222225189209,-3.9762356281280518,-1.2380475997924805,-1.2114088535308838,2.9992117881774902,-1.201940894126892,2.002985715866089,-1.5551060438156128,-12.323162078857422,0.43389609456062317,-12.625277519226074,-4.232465744018555,-1.9433844089508057,0.548764169216156,0.30104756355285645,-0.0029495323542505503,-2.7681446075439453,1.8025743961334229,-0.07795226573944092,-1.0499943494796753,6.544762134552002,1.0688132047653198,1.8783231973648071,0.8575503826141357,0.3933848440647125,0.9267415404319763,-3.127436876296997,2.0658416748046875,-0.5295438170433044,-2.897940158843994,-0.9443686604499817,3.3470849990844727,1.5684629678726196,0.8870608806610107,-2.5228729248046875,0.33008846640586853,6.376753330230713,-2.456023931503296,0.7186411619186401,3.294419765472412,-3.7610812187194824,-5.526662826538086,-6.007420063018799,-1.3813976049423218,0.5608918070793152,-1.2423003911972046,3.609550952911377,-2.446450710296631,-4.968306541442871,5.373801231384277,-5.333938121795654,-5.686566352844238,0.7188223600387573,1.0984688997268677,-1.1089597940444946,0.4196417033672333,0.6517147421836853,2.560781955718994,0.6154066324234009,0.7278569936752319,1.7133432626724243,-1.5776294469833374,-0.6939578056335449,-0.6877589225769043,0.6210539937019348,-0.6930150389671326,1.331313967704773,-0.7640994787216187,-1.867607831954956,0.960856556892395,-1.897974967956543,-0.8269547820091248,1.3505375385284424,0.028224823996424675,-1.0583053827285767,0.2572651207447052,1.1372898817062378,-1.0457667112350464,0.38332438468933105,1.3820805549621582,-1.3707231283187866,-1.6006345748901367,-0.3498980402946472,-1.0102791786193848,-0.6728070378303528,-1.131252646446228,1.8218555450439453,-1.3781635761260986,-0.7532504796981812,0.40646371245384216,-1.020616888999939,-1.6733286380767822,0.2078903466463089,0.8484593629837036,-0.15398216247558594,0.1236770823597908,0.16818195581436157,1.9612526893615723,0.09537111222743988,-0.46513253450393677,1.6206860542297363,-0.44043493270874023,0.2971210479736328,0.2869439125061035,0.8218780755996704,-0.05033433809876442,0.19965019822120667,0.12879878282546997,-0.8563148975372314,-0.21749435365200043,-0.6589852571487427,0.5378806591033936,-0.18950749933719635,-0.4677831828594208,0.2220732718706131,-0.3906751871109009,0.005906443577259779,-2.550304651260376,-0.38803938031196594,0.03563035652041435,-3.127101182937622,0.4861984848976135,-0.3041568696498871,-0.3493295907974243,-0.507716178894043,-0.015352553687989712,0.09246647357940674,-0.15943025052547455,0.7756895422935486,0.25085213780403137,0.9872943758964539,-0.5329981446266174,-0.6239293217658997,1.0439308881759644,-1.2173080444335938,0.8130770921707153,-0.2457771897315979,0.7276109457015991,0.8229584097862244,0.6331237554550171,0.7546499371528625,-1.976585030555725,0.2487841099500656,0.08512812852859497,0.9663296937942505,0.5345391035079956,0.13253560662269592,-0.2238771915435791,-1.968302845954895,0.1750178188085556,-1.85545015335083,-0.5113371014595032,-1.1576850414276123,-0.012578961439430714,2.169419050216675,-0.3752162754535675,-2.685033082962036,0.8905438780784607,-0.42128077149391174,-1.4089235067367554,3.4942595958709717,2.8776438236236572,1.010392189025879,0.8673251271247864,0.2018808275461197,0.9932936429977417,-2.563896894454956,2.0968821048736572,0.3247033953666687,-2.012251377105713,0.6380484700202942,1.312157392501831,-1.9491710662841797,-0.8787477016448975,2.7919862270355225,-0.13481466472148895,-5.072378158569336,2.2369301319122314,-0.7651903629302979,-3.017573833465576,3.3742284774780273,4.523025035858154,3.696770429611206,1.479134440422058,-0.6564810872077942,1.425412654876709,-3.7157487869262695,2.602177381515503,4.173086166381836,-4.1930131912231445,4.171623229980469,4.683346748352051,-0.7691015005111694,0.06098218634724617,0.8399534225463867,-0.3093356788158417,-0.969386875629425,1.3973195552825928,-0.254205584526062,-0.9459838271141052,2.2160158157348633,1.3425885438919067,0.5108664631843567,0.6099631786346436,0.17330771684646606,0.7791574597358704,-1.1148600578308105,0.9779595732688904,-0.4008057117462158,-0.6809749007225037,-0.6218820214271545,0.9214205145835876,0.7342343330383301,1.0377607345581055,-1.7280539274215698,0.5490350723266602,2.905116319656372,-0.19267340004444122,0.8608759045600891,2.2947709560394287,-2.5746328830718994,-5.4615278244018555,-3.212980270385742,-0.8919134736061096,0.9502593278884888,-0.4530135691165924,2.5084729194641113,-1.4711456298828125,-5.9048871994018555,3.4549777507781982,-8.500149726867676,-1.099661946296692]},"cellActivationBias":{"rows":20,"columns":1,"weights":[-1.8650026321411133,1.4280221462249756,2.1275641918182373,0.6445950865745544,-5.4400200843811035,5.101405620574951,0.5030912160873413,-7.481879234313965,5.789574146270752,2.136934995651245,6.618447780609131,3.0687670707702637,1.785264253616333,2.0673489570617676,-2.824671983718872,3.1110429763793945,-2.416245937347412,-6.644842624664307,0.470908522605896,3.807386636734009]}}],"outputConnector":{"rows":1,"columns":20,"weights":[-1.0605157613754272,-0.27168864011764526,2.152919292449951,0.14907300472259521,0.259073942899704,1.8277711868286133,0.05250935256481171,2.50522518157959,0.38346871733665466,0.2402312010526657,-1.33561372756958,0.733091413974762,-0.312892884016037,1.316247582435608,-2.964355945587158,2.962759017944336,0.786349892616272,0.20622079074382782,-0.0735403373837471,-1.951263189315796]},"output":{"rows":1,"columns":1,"weights":[2.8912646770477295]},"inputLookup":{"h":0,"d":1,"a":2},"inputLookupLength":3,"outputLookup":{"fthg":0,"ftag":1},"outputLookupLength":2};
  var output = [];
  var states = [];
  var prevStates;
  var state;
  var max = input.length + 1;
  for (var _i = 0; _i < max; _i++) {
    prevStates = states;
    states = [];
    states[0] = {
      name: 'forwardFn',
      left: undefined,
      right: undefined,
      product: new Matrix(1, 1)
    };
    states[1] = {
      name: 'multiply',
      left: json.hiddenLayers[0].inputMatrix,
      right: states[0].product,
      product: new Matrix(20, 1)
    };
    states[2] = {
      name: 'multiply',
      left: json.hiddenLayers[0].inputHidden,
      right: typeof prevStates[25] === 'object' ? prevStates[25].product : new Matrix(20, 1),
      product: new Matrix(20, 1)
    };
    states[3] = {
      name: 'add',
      left: states[1].product,
      right: states[2].product,
      product: new Matrix(20, 1)
    };
    states[4] = {
      name: 'add',
      left: states[3].product,
      right: json.hiddenLayers[0].inputBias,
      product: new Matrix(20, 1)
    };
    states[5] = {
      name: 'sigmoid',
      left: states[4].product,
      right: undefined,
      product: new Matrix(20, 1)
    };
    states[6] = {
      name: 'multiply',
      left: json.hiddenLayers[0].forgetMatrix,
      right: states[0].product,
      product: new Matrix(20, 1)
    };
    states[7] = {
      name: 'multiply',
      left: json.hiddenLayers[0].forgetHidden,
      right: states[2].right,
      product: new Matrix(20, 1)
    };
    states[8] = {
      name: 'add',
      left: states[6].product,
      right: states[7].product,
      product: new Matrix(20, 1)
    };
    states[9] = {
      name: 'add',
      left: states[8].product,
      right: json.hiddenLayers[0].forgetBias,
      product: new Matrix(20, 1)
    };
    states[10] = {
      name: 'sigmoid',
      left: states[9].product,
      right: undefined,
      product: new Matrix(20, 1)
    };
    states[11] = {
      name: 'multiply',
      left: json.hiddenLayers[0].outputMatrix,
      right: states[0].product,
      product: new Matrix(20, 1)
    };
    states[12] = {
      name: 'multiply',
      left: json.hiddenLayers[0].outputHidden,
      right: states[2].right,
      product: new Matrix(20, 1)
    };
    states[13] = {
      name: 'add',
      left: states[11].product,
      right: states[12].product,
      product: new Matrix(20, 1)
    };
    states[14] = {
      name: 'add',
      left: states[13].product,
      right: json.hiddenLayers[0].outputBias,
      product: new Matrix(20, 1)
    };
    states[15] = {
      name: 'sigmoid',
      left: states[14].product,
      right: undefined,
      product: new Matrix(20, 1)
    };
    states[16] = {
      name: 'multiply',
      left: json.hiddenLayers[0].cellActivationMatrix,
      right: states[0].product,
      product: new Matrix(20, 1)
    };
    states[17] = {
      name: 'multiply',
      left: json.hiddenLayers[0].cellActivationHidden,
      right: states[2].right,
      product: new Matrix(20, 1)
    };
    states[18] = {
      name: 'add',
      left: states[16].product,
      right: states[17].product,
      product: new Matrix(20, 1)
    };
    states[19] = {
      name: 'add',
      left: states[18].product,
      right: json.hiddenLayers[0].cellActivationBias,
      product: new Matrix(20, 1)
    };
    states[20] = {
      name: 'tanh',
      left: states[19].product,
      right: undefined,
      product: new Matrix(20, 1)
    };
    states[21] = {
      name: 'multiplyElement',
      left: states[10].product,
      right: states[2].right,
      product: new Matrix(20, 1)
    };
    states[22] = {
      name: 'multiplyElement',
      left: states[5].product,
      right: states[20].product,
      product: new Matrix(20, 1)
    };
    states[23] = {
      name: 'add',
      left: states[21].product,
      right: states[22].product,
      product: new Matrix(20, 1)
    };
    states[24] = {
      name: 'tanh',
      left: states[23].product,
      right: undefined,
      product: new Matrix(20, 1)
    };
    states[25] = {
      name: 'multiplyElement',
      left: states[15].product,
      right: states[24].product,
      product: new Matrix(20, 1)
    };
    states[26] = {
      name: 'multiply',
      left: json.outputConnector,
      right: states[25].product,
      product: new Matrix(1, 1)
    };
    states[27] = {
      name: 'add',
      left: states[26].product,
      right: json.output,
      product: new Matrix(1, 1)
    };
    for (var stateIndex = 0, stateMax = 28; stateIndex < stateMax; stateIndex++) {
      state = states[stateIndex];
      var product = state.product;
      var left = state.left;
      var right = state.right;

      switch (state.name) {
case 'forwardFn':
product.weights = _i < input.length ? input[_i]: prevStates[prevStates.length - 1].product.weights;
break;
        case 'multiply': //compiled from src/recurrent/matrix/multiply.js
          
            const leftRows = left.rows;
            const leftColumns = left.columns;
            const rightColumns = right.columns;
            // loop over rows of left
            for (let leftRow = 0; leftRow < leftRows; leftRow++) {
                const leftRowBase = leftColumns * leftRow;
                const rightRowBase = rightColumns * leftRow;
                // loop over cols of right
                for (let rightColumn = 0; rightColumn < rightColumns; rightColumn++) {
                    // dot product loop
                    let dot = 0;
                    // loop over columns of left
                    for (let leftColumn = 0; leftColumn < leftColumns; leftColumn++) {
                        const rightColumnBase = rightColumns * leftColumn;
                        const leftIndex = leftRowBase + leftColumn;
                        const rightIndex = rightColumnBase + rightColumn;
                        dot += left.weights[leftIndex] * right.weights[rightIndex];
                        
                        
                    }
                    product.weights[rightRowBase + rightColumn] = dot;
                }
            }
        
          break;
        case 'add': //compiled from src/recurrent/matrix/add.js
          
            for (let i = 0; i < left.weights.length; i++) {
                product.weights[i] = left.weights[i] + right.weights[i];
                
            }
        
          break;
        case 'sigmoid': //compiled from src/recurrent/matrix/sigmoid.js
          
            // sigmoid nonlinearity
            for (let i = 0; i < left.weights.length; i++) {
                product.weights[i] = 1 / (1 + Math.exp(-left.weights[i]));
                
            }
        
          break;
        case 'tanh': //compiled from src/recurrent/matrix/tanh.js
          
            // tanh nonlinearity
            for (let i = 0; i < left.weights.length; i++) {
                product.weights[i] = Math.tanh(left.weights[i]);
                
            }
        
          break;
        case 'multiplyElement': //compiled from src/recurrent/matrix/multiply-element.js
          
            const { weights } = left;
            for (let i = 0; i < weights.length; i++) {
                product.weights[i] = left.weights[i] * right.weights[i];
                
            }
        
          break;
      }
    }
    if (_i >= input.length - 1) { output.push(state.product.weights); }
  }
  return lookupOutput(output);
  function lookupInput(input) {
          var table = {"h":0,"d":1,"a":2};
          var result = [];
          for (var p in table) {
            result.push(Float32Array.from([input[p]]));
          }
          return result;
        }
  function lookupOutput(output) {
          var table = {"fthg":0,"ftag":1};
          var result = {};
          for (var p in table) {
            result[p] = output[table[p]][0];
          }
          return result;
        }

  function Matrix(rows, columns) {
    this.rows = rows;
    this.columns = columns;
    this.weights = zeros(rows * columns);
  }
  function zeros$1(size) {
    return new Float32Array(size);
}
  function softmax(matrix) {
    // probability volume
    const result = new Matrix(matrix.rows, matrix.columns);
    let maxVal = -999999;
    for (let i = 0; i < matrix.weights.length; i++) {
        if (matrix.weights[i] > maxVal) {
            maxVal = matrix.weights[i];
        }
    }
    let s = 0;
    for (let i = 0; i < matrix.weights.length; i++) {
        result.weights[i] = Math.exp(matrix.weights[i] - maxVal);
        s += result.weights[i];
    }
    for (let i = 0; i < matrix.weights.length; i++) {
        result.weights[i] /= s;
    }
    // no backward pass here needed
    // since we will use the computed probabilities outside
    // to set gradients directly on m
    return result;
}
  function randomFloat(min, max) {
    return Math.random() * (max - min) + min;
}
  function sampleI(matrix) {
    // sample argmax from w, assuming w are
    // probabilities that sum to one
    const r = randomFloat(0, 1);
    const w = matrix.weights;
    let x = 0;
    let i = 0;
    while (true) {
        x += w[i];
        if (x > r) {
            return i;
        }
        i++;
    }
}
  function maxI(matrix) {
    // argmax of array w
    const { weights } = matrix;
    let maxv = weights[0];
    let maxix = 0;
    for (let i = 1; i < weights.length; i++) {
        const v = weights[i];
        if (v < maxv)
            continue;
        maxix = i;
        maxv = v;
    }
    return maxix;
}
};
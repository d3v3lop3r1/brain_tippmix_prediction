export default function anonymous(rawInput
) {

  var input = lookupInput(rawInput);
  var json = {"type":"LSTMTimeStep","options":{"inputSize":1,"inputRange":0,"hiddenLayers":[20],"outputSize":1,"decayRate":0.999,"smoothEps":1e-8,"regc":0.000001,"clipval":5,"maxPredictionLength":100,"dataFormatter":{"indexTable":{},"characterTable":{},"characters":[],"specialIndexes":[]}},"hiddenLayers":[{"inputMatrix":{"rows":20,"columns":1,"weights":[2.446721315383911,-1.4909822940826416,1.2945715188980103,-2.0447657108306885,-2.75341796875,-5.598755359649658,-1.5265390872955322,0.24997444450855255,0.49468496441841125,-5.004425048828125,-5.2136616706848145,0.06645235419273376,-0.2573108673095703,-1.4029161930084229,2.8573365211486816,-3.740161180496216,1.1537718772888184,3.072244644165039,-3.248173475265503,1.6249850988388062]},"inputHidden":{"rows":20,"columns":20,"weights":[-2.837517261505127,0.624597430229187,-0.34810489416122437,1.5828356742858887,-1.7299660444259644,-7.322643756866455,0.5012024641036987,-0.3318297863006592,-1.8446974754333496,-0.4309839606285095,0.9509440064430237,-0.8172210454940796,3.1927778720855713,1.3132580518722534,0.2901039123535156,-0.6139634847640991,-0.11744905263185501,-3.049511432647705,-0.43292999267578125,6.389778137207031,0.20071302354335785,0.4413227438926697,0.9683802723884583,1.7441143989562988,-0.19325442612171173,-1.0568952560424805,-0.32241368293762207,0.9361791014671326,-0.225021630525589,-0.17299111187458038,-0.3509864807128906,-3.360701560974121,-2.97208571434021,0.30161210894584656,-0.6813551187515259,-0.4785310924053192,0.36690640449523926,5.766046524047852,1.7655057907104492,-11.334831237792969,4.4498982429504395,-0.9573116898536682,5.829385280609131,1.7160775661468506,-0.9074479341506958,-1.6082171201705933,-0.21354174613952637,1.165234923362732,1.2503105401992798,-0.7632929086685181,-1.4281938076019287,-5.418224334716797,-2.5249292850494385,2.1018803119659424,-0.07966454327106476,5.881369590759277,0.04242881387472153,2.8065433502197266,-3.264639377593994,5.201192855834961,-1.2560230493545532,-0.390584260225296,-5.522291660308838,2.858546733856201,-0.47001728415489197,-10.235335350036621,-0.675372838973999,0.27658697962760925,-0.5071452260017395,-0.33546769618988037,-0.8572115898132324,-8.585442543029785,6.6792120933532715,-1.2276207208633423,-0.004789415746927261,-0.16680675745010376,-0.9331944584846497,9.9817533493042,-0.43290358781814575,2.5004425048828125,1.0419001579284668,-0.005134982522577047,-0.6396366953849792,1.2040789127349854,-2.392066717147827,0.2267524152994156,-0.7481542825698853,0.9258386492729187,-0.5637348294258118,0.33896392583847046,-1.1516664028167725,-9.022785186767578,0.03484624624252319,1.186600685119629,-0.3938799500465393,-1.470702052116394,0.506935179233551,1.6496238708496094,-1.6521520614624023,-2.4366323947906494,9.49505615234375,0.3859516978263855,2.2151081562042236,5.055431842803955,-0.8132964372634888,-11.997455596923828,-2.371263027191162,2.573319673538208,1.6461520195007324,-0.4659045934677124,-3.1891896724700928,-3.60272216796875,-0.005328970495611429,0.6752657890319824,-0.8545560836791992,9.251347541809082,1.270745873451233,3.7096853256225586,-2.608062982559204,-2.107994794845581,0.2509000301361084,0.20985861122608185,-0.7342439293861389,-3.08564829826355,-0.5660653114318848,1.3293495178222656,-3.295276641845703,1.6975606679916382,-0.07632461190223694,-0.9040460586547852,-2.318925380706787,-1.3615909814834595,0.26873359084129333,1.8588379621505737,-0.7201282978057861,-0.5630611181259155,2.4196395874023438,3.228721857070923,-10.725929260253906,-2.141662120819092,0.32949718832969666,1.1470171213150024,0.47816377878189087,3.7637550830841064,0.13166917860507965,-2.5917510986328125,-0.5848678946495056,0.7289261221885681,-0.3692183792591095,0.7004639506340027,-1.3808906078338623,-9.824321746826172,-0.4307617247104645,0.6197618246078491,-0.7600383162498474,0.8741868734359741,0.6015395522117615,2.7888600826263428,-2.9291257858276367,-5.559023857116699,-2.716895580291748,-1.2771376371383667,-5.614534854888916,1.7252970933914185,-1.2096565961837769,-1.612301230430603,-0.12305530905723572,0.5323896408081055,0.5654258131980896,0.26856914162635803,-3.1358494758605957,-13.490884780883789,1.1743050813674927,-1.135586142539978,-0.41569989919662476,1.2048847675323486,0.27925896644592285,7.465045928955078,-6.5458574295043945,1.5333569049835205,4.220190525054932,-0.10813000798225403,0.07093321532011032,1.2741296291351318,-0.7173818945884705,-1.164359450340271,-0.7020275592803955,0.7778656482696533,0.10358133912086487,1.2556716203689575,-1.1757031679153442,-2.1203296184539795,-0.7468780279159546,0.9136155843734741,-0.6459193229675293,2.210944414138794,0.6153754591941833,1.5360610485076904,0.8041046857833862,3.0006420612335205,4.906890392303467,-1.307307243347168,-3.2626287937164307,0.49011921882629395,-0.005903350189328194,-0.03711352497339249,0.3077778220176697,-0.3452759087085724,3.034297227859497,-0.41957196593284607,-2.9786736965179443,-6.050169467926025,3.310015916824341,1.112545371055603,-1.0082957744598389,2.6411681175231934,0.6446244120597839,6.442032814025879,-0.8921249508857727,2.3480169773101807,-3.7219252586364746,-0.016860179603099823,6.302588939666748,-5.220932960510254,-0.587713360786438,-1.0232993364334106,1.1912401914596558,-0.9807226657867432,2.7283248901367188,0.2054872363805771,1.0581610202789307,0.36879560351371765,1.058375597000122,-0.7270703315734863,0.11624673753976822,-0.43728476762771606,-0.42359814047813416,1.722317099571228,7.01431131362915,1.9885693788528442,-9.059870719909668,-0.27921682596206665,-0.803389847278595,2.169710397720337,-0.18098823726177216,-5.676379203796387,-0.8578796982765198,-0.6932970285415649,-1.1580389738082886,0.09044894576072693,-0.40889063477516174,-0.9429375529289246,-6.243067741394043,2.0051541328430176,-0.21721486747264862,4.353381633758545,0.07508344948291779,3.5818073749542236,0.6348013877868652,4.807925224304199,-2.324575662612915,-0.06917286664247513,6.196309566497803,7.927339553833008,-1.115582823753357,1.3224713802337646,-0.6062541604042053,0.9703047871589661,-0.12470836192369461,1.0897899866104126,-2.4612462520599365,-11.631278991699219,-5.107512474060059,-2.459440231323242,-0.3755655288696289,8.684820175170898,1.1094963550567627,5.5869550704956055,-5.712082386016846,-3.8254644870758057,-1.1667509078979492,-0.10210739076137543,-0.7456669211387634,-0.3215281367301941,-0.24608267843723297,-0.6922672390937805,-0.05090169236063957,0.5510486364364624,0.001103196875192225,0.11601521819829941,0.5260300636291504,-0.5560499429702759,0.26952946186065674,0.5012779831886292,-0.23824644088745117,0.4536445438861847,0.15230640769004822,0.34820133447647095,-0.784069299697876,1.0955520868301392,3.0906684398651123,-0.49401935935020447,5.696136951446533,2.011178731918335,-3.921037197113037,-2.2916266918182373,-2.115673065185547,0.9867327213287354,2.6055338382720947,0.09984573721885681,-0.8423560857772827,-9.703519821166992,-1.9915094375610352,0.5215527415275574,-0.8123529553413391,-1.2500640153884888,0.18319249153137207,2.714477062225342,-6.608465194702148,-7.157636642456055,-0.2892400026321411,-4.003439903259277,-11.846811294555664,5.747371196746826,-0.4523293972015381,-0.9981560111045837,-0.5124070048332214,0.9841625094413757,0.6112829446792603,-0.17477889358997345,-2.5255274772644043,-8.248698234558105,2.6580233573913574,0.8929881453514099,2.6259231567382812,0.7085107564926147,8.193553924560547,8.337570190429688,-18.12481689453125,1.6058323383331299,-7.223308563232422,-1.426242470741272,-9.138922691345215,-13.006505966186523,0.757060170173645,0.712319016456604,-2.9958529472351074,1.1542248725891113,0.025790872052311897,-0.9909026026725769,0.7190245389938354,2.327970266342163,4.149135112762451,1.587047815322876,-0.012187219224870205,-2.7408554553985596,-3.766596794128418,-4.026342868804932,-4.958066940307617,17.862035751342773,-5.419458389282227,5.264730930328369,12.7670316696167,-4.356964111328125,0.6860159635543823,-0.6678484082221985,2.5074713230133057,0.850138247013092,2.140962839126587,-0.23501387238502502,1.5488712787628174,4.915284156799316,-1.5155397653579712,-1.123052954673767,2.972222089767456,-4.386369228363037,-10.479742050170898,3.317716598510742,-32.2706413269043,1.2661250829696655,-17.125150680541992,-8.620810508728027,-13.709890365600586,-10.109480857849121,0.43978774547576904,5.470476150512695,-0.5325585603713989,-0.8816908597946167,2.2645063400268555,0.3719816505908966,0.6803370118141174,3.3403677940368652,7.339962005615234,4.69215726852417,0.4129441976547241,1.6251120567321777,3.623689651489258,-11.806732177734375,1.4092276096343994,-9.640445709228516]},"inputBias":{"rows":20,"columns":1,"weights":[5.118235111236572,3.8325297832489014,6.417074203491211,2.4322593212127686,-0.8238990306854248,1.7830697298049927,-6.556517124176025,0.6608455777168274,-0.2721237540245056,-2.3514456748962402,0.452636182308197,-2.332958459854126,3.670612096786499,2.3628647327423096,-0.10258729010820389,4.077646732330322,-0.8324615359306335,-2.862947463989258,9.612039566040039,-12.76906681060791]},"forgetMatrix":{"rows":20,"columns":1,"weights":[-4.3259968757629395,0.2383347451686859,-0.21657738089561462,4.529170989990234,-1.617913842201233,1.126019835472107,-1.9973808526992798,-0.19852331280708313,0.13762441277503967,-1.2779518365859985,-1.9914534091949463,-9.478867530822754,-2.224261522293091,-1.5918878316879272,-0.8574089407920837,-1.0346797704696655,6.448474884033203,2.859421730041504,0.8142975568771362,1.036060094833374]},"forgetHidden":{"rows":20,"columns":20,"weights":[5.009807109832764,0.1894678771495819,-0.2580166459083557,2.6307194232940674,-0.16359353065490723,-1.817596673965454,0.0672106146812439,0.1626436710357666,0.26195019483566284,0.23704880475997925,-0.28403666615486145,-2.016713857650757,-0.49288904666900635,-0.3095661997795105,0.1076306402683258,0.4185340404510498,-0.009192581288516521,4.473206996917725,-1.1777236461639404,0.6556264162063599,0.5714790225028992,-0.1521928459405899,0.035288065671920776,-0.1940617710351944,0.009223131462931633,-0.27110132575035095,-0.07238361984491348,-0.005830451380461454,0.14630985260009766,0.05081711336970329,-0.005844671279191971,-0.0937759280204773,0.016674863174557686,-0.05372592806816101,-0.02293325960636139,0.03735703229904175,-0.012662732042372227,-0.1084878146648407,-0.024115584790706635,0.498320609331131,1.6490064859390259,-0.05124661326408386,0.569470226764679,0.21361395716667175,-0.19204172492027283,-1.7725123167037964,-0.01703628897666931,0.023158865049481392,0.21313324570655823,0.002613089280202985,-0.04666182026267052,-0.01034387107938528,-0.38576820492744446,0.5154334902763367,0.013169091194868088,-2.203648567199707,-0.003990058321505785,0.2451959103345871,-0.12357393652200699,-0.09887246787548065,-4.322453498840332,0.2747114598751068,-2.297179698944092,-0.7738592028617859,-0.10338062047958374,-0.46846848726272583,-0.009785654954612255,0.031752604991197586,0.09242666512727737,-0.12531651556491852,-0.813335657119751,-1.0887044668197632,-1.4809043407440186,0.23829491436481476,0.02719227783381939,0.5423902869224548,-0.5922408699989319,3.3170080184936523,0.5486392974853516,-5.172905921936035,0.45483678579330444,0.029016107320785522,0.274229496717453,1.5409637689590454,-3.4128057956695557,-4.3550310134887695,-0.6661266088485718,1.176857829093933,2.0901598930358887,-0.1409783661365509,-0.16840463876724243,-0.16478104889392853,0.2144022434949875,-0.7446282505989075,-0.056339163333177567,0.23156176507472992,0.04358169063925743,0.3081618845462799,-2.4278359413146973,0.4546140730381012,-1.2960600852966309,0.0777738094329834,-1.8094277381896973,-2.2867817878723145,0.464119017124176,-7.700893402099609,0.43385204672813416,-0.2119130939245224,-0.9143689274787903,0.20347897708415985,1.1539113521575928,-0.6770369410514832,7.97187614440918,-3.386571168899536,0.006252501159906387,0.17188836634159088,0.09586609154939651,-0.20494315028190613,3.39593243598938,2.2626333236694336,-1.5689009428024292,-0.10476669669151306,0.4131195545196533,0.6228077411651611,-0.2283143252134323,-0.2762886881828308,-0.05814070999622345,0.19861939549446106,-0.040201496332883835,-0.15359371900558472,0.26237156987190247,3.6161983013153076,-0.055784083902835846,-0.11903434991836548,0.056269556283950806,-0.1114172711968422,-0.17299416661262512,-1.1360212564468384,0.9230980277061462,-2.685673236846924,0.40904170274734497,0.08701616525650024,-0.03978624939918518,-0.16451521217823029,-0.04972415789961815,0.12394984066486359,-0.023230066522955894,0.08290470391511917,-0.21068009734153748,-0.01445053145289421,0.039269495755434036,-0.021356141194701195,-0.11408620327711105,0.1323685199022293,-0.0575900599360466,0.500630259513855,-0.12215468287467957,-0.23027315735816956,0.17798592150211334,0.3800737261772156,-0.7644515633583069,0.10169896483421326,0.10625506192445755,-0.18149054050445557,-0.017696678638458252,-0.16721701622009277,-0.01783050410449505,-0.011980310082435608,-0.5947666764259338,0.02096901834011078,-0.32993778586387634,-0.17986513674259186,0.05921363830566406,0.4479232430458069,0.09646232426166534,0.28627219796180725,-0.026176204904913902,-0.1902366280555725,0.09124394506216049,0.6680415868759155,0.27616363763809204,-0.11419224739074707,0.05881796404719353,-0.3118084967136383,-0.010179978795349598,-0.030775554478168488,-0.0338752456009388,0.16909730434417725,0.3278588652610779,-0.5497778058052063,0.07458876818418503,0.05764840915799141,-0.11902914941310883,0.00476319994777441,-0.022763634100556374,-0.5617778301239014,-0.27910271286964417,0.3767239451408386,-0.07283548265695572,0.330252081155777,2.725966453552246,0.46105507016181946,-0.1937088817358017,1.1225141286849976,0.15554259717464447,-1.6748157739639282,0.08270274847745895,-0.13798734545707703,-0.2108984887599945,0.4084112346172333,-1.082817792892456,-1.765576958656311,-0.44143009185791016,1.181534767150879,-0.03442982956767082,0.5998492240905762,0.11266417801380157,1.051764726638794,-0.30471134185791016,0.37061136960983276,-1.037431240081787,0.36833328008651733,-0.005760452710092068,0.7598275542259216,-0.05859577655792236,-0.510942280292511,-0.053457893431186676,-0.010966991074383259,-0.11377402395009995,0.0001402005582349375,-0.5556873083114624,1.2522449493408203,0.1727181226015091,-0.05341264605522156,0.012501619756221771,0.8066044449806213,-0.004200549330562353,-2.410895824432373,-0.6856591105461121,3.1010284423828125,-1.9917101860046387,0.6279301643371582,0.537834107875824,-2.3203439712524414,-0.05659948289394379,-0.5225160121917725,0.03004322573542595,0.14291492104530334,0.16173817217350006,0.060917928814888,0.06614325940608978,-0.5996184945106506,-1.6685761213302612,0.6217103004455566,-0.026560327038168907,0.199049711227417,0.035238415002822876,0.2868160009384155,-0.4891227185726166,1.853527545928955,0.34081628918647766,-0.024350687861442566,0.6459342837333679,0.011021632701158524,0.08989948034286499,-0.17823012173175812,-0.07300086319446564,0.3588656485080719,0.8652565479278564,-0.011703778058290482,-0.3099919259548187,-0.3217272460460663,-0.42693760991096497,0.035995617508888245,-0.08750426769256592,0.8739187121391296,-0.14914575219154358,0.5156969428062439,-0.2160860300064087,1.1529382467269897,-0.6316661834716797,-0.0937039703130722,-0.40461745858192444,-0.07365081459283829,0.00493180425837636,0.037751514464616776,0.04424208775162697,-0.02616965025663376,-0.045423105359077454,-0.016208188608288765,-0.004063047468662262,0.13384081423282623,0.06323665380477905,0.000671910762321204,0.15793372690677643,-0.04346170648932457,0.010594348423182964,-0.15714019536972046,0.079078808426857,0.11000227183103561,1.1108405590057373,0.17466308176517487,-0.058951959013938904,0.30182352662086487,-0.487224817276001,-0.6571477651596069,-0.02561955712735653,-0.005397176370024681,-0.24309518933296204,-0.09670999646186829,0.14645405113697052,-0.5935680866241455,-0.2689063251018524,0.12010295689105988,-0.022628173232078552,0.7319486737251282,0.007529393304139376,-0.10846330225467682,-0.23500597476959229,1.3021970987319946,-2.468370199203491,0.037589434534311295,-0.2544686496257782,-0.6824271082878113,-0.001621119910851121,0.0007060293573886156,-0.09042888879776001,0.15489451587200165,0.10966137051582336,0.012503542937338352,0.4887557327747345,1.818406105041504,0.08373270183801651,-0.1346600353717804,-0.1894940286874771,-0.0624801442027092,1.0748265981674194,-3.0812106132507324,-0.6381797790527344,0.5729386806488037,-3.459294557571411,-0.3652264475822449,-0.05429676175117493,-1.8534464836120605,0.11770451813936234,0.6176607012748718,0.3110599219799042,-0.03596854582428932,0.44073909521102905,-0.16542431712150574,0.461692750453949,3.3228161334991455,0.5244820713996887,0.20482493937015533,0.046392086893320084,-0.345784068107605,-0.17297306656837463,-4.445260524749756,1.2725481986999512,1.4626582860946655,-7.0476908683776855,-0.844137966632843,-3.972784996032715,-1.851752519607544,-0.01664138212800026,-0.018108299002051353,0.43151551485061646,0.010358412750065327,0.3883444368839264,-0.013907608576118946,-0.6736514568328857,-3.995170831680298,0.9273895621299744,-0.19271481037139893,-2.616727352142334,-0.4118209183216095,-0.03157699853181839,7.825877666473389,-3.0373928546905518,-4.689747333526611,13.995152473449707,0.17242170870304108,2.2394025325775146,9.328520774841309,-0.5809800028800964,-2.975198268890381,-1.3108690977096558,0.007820024155080318,8.108744621276855,-0.038408614695072174,-0.7609884142875671,-9.795392990112305,0.2937956750392914,-1.033494234085083,-0.6259803175926208,-0.07615967094898224,7.214702606201172,-6.912717819213867,0.6701740026473999,-0.6773242354393005]},"forgetBias":{"rows":20,"columns":1,"weights":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]},"outputMatrix":{"rows":20,"columns":1,"weights":[-1.347401738166809,-3.610382318496704,-4.435475826263428,-4.399662017822266,3.314422369003296,1.416312575340271,3.894254207611084,-3.723175525665283,-3.6906850337982178,0.4582427442073822,-1.4525365829467773,1.697539210319519,-3.1612842082977295,-5.907667636871338,-1.7025498151779175,-1.7978943586349487,-3.55865740776062,1.1298896074295044,-0.16425690054893494,5.362547874450684]},"outputHidden":{"rows":20,"columns":20,"weights":[14.738429069519043,1.8052798509597778,9.33537769317627,1.68313729763031,-1.535932183265686,-8.80402946472168,-1.1786636114120483,0.7626839280128479,-2.175471067428589,0.10852345079183578,-1.8153865337371826,-7.503057479858398,-1.680471658706665,-2.3143398761749268,-1.2229845523834229,5.356880187988281,-2.6384871006011963,-0.13842208683490753,-13.995387077331543,10.883440017700195,6.794814109802246,4.7109055519104,9.826590538024902,10.064353942871094,-3.4538989067077637,-1.2017099857330322,-1.624117136001587,1.5119867324829102,0.20809584856033325,-0.18256144225597382,-2.3316328525543213,-4.5493903160095215,-0.34589579701423645,0.6448871493339539,-1.5959315299987793,0.9024497866630554,3.3372998237609863,2.725706100463867,2.553851366043091,-2.5983047485351562,10.509466171264648,-0.4338051378726959,8.071788787841797,9.564920425415039,-0.7660875916481018,-0.5058526992797852,-0.8751396536827087,0.16555333137512207,3.048347234725952,0.49412983655929565,-0.6528820991516113,-9.911962509155273,-2.3309314250946045,0.113605797290802,-2.9013755321502686,-5.508344650268555,0.20261870324611664,6.042200565338135,-3.9030113220214844,-0.9349797964096069,-7.338263034820557,2.6124870777130127,1.4713447093963623,19.05143928527832,-1.1819676160812378,-2.3378498554229736,-4.781387805938721,2.6238486766815186,-2.934670925140381,-0.4118591547012329,-8.85319995880127,-4.145236968994141,-2.5855391025543213,-1.2373461723327637,-3.2509593963623047,2.035966396331787,-9.338652610778809,-2.815854072570801,-1.412017822265625,0.05769786611199379,-0.4642883837223053,0.27761003375053406,-1.424092411994934,2.153966188430786,-2.27504301071167,-3.4827218055725098,-0.09437324851751328,0.3289186358451843,-0.10784956067800522,-0.12449165433645248,0.10521366447210312,-9.534318923950195,2.1311261653900146,0.3006308078765869,-0.13878004252910614,0.26173892617225647,0.22571149468421936,1.8915605545043945,-1.501289963722229,0.06257463246583939,-2.602731704711914,0.24387790262699127,-1.8686633110046387,2.243623971939087,2.888507843017578,-13.23045825958252,0.2934736907482147,-0.15465262532234192,-2.0880837440490723,0.1893470138311386,0.09124269336462021,-0.8679935932159424,9.054389953613281,-1.2645515203475952,-0.22313182055950165,7.115179061889648,0.01759105548262596,-0.27183109521865845,2.3035569190979004,2.036953926086426,-2.1244750022888184,1.6314129829406738,-0.4571903944015503,-2.3781583309173584,-0.18115991353988647,0.3898632824420929,-0.18387220799922943,0.3376721441745758,0.2634735107421875,-0.4517207145690918,-1.3546007871627808,0.801400899887085,1.1214579343795776,1.4991477727890015,-0.2503461539745331,-0.5900225043296814,0.2817634344100952,-0.5503770709037781,-7.125691890716553,-0.4494469463825226,-0.23635746538639069,0.8994740843772888,1.7694989442825317,2.35951828956604,-2.141859769821167,-0.04745989665389061,-1.1708379983901978,-0.00892390962690115,-0.7428272366523743,0.15602177381515503,-0.8253554701805115,-9.22867488861084,1.0104336738586426,0.559499979019165,-0.775081992149353,1.8758264780044556,0.42892396450042725,1.6147371530532837,-1.8468583822250366,-3.246699094772339,-6.91983699798584,-0.43133819103240967,-4.760376453399658,-0.7631458640098572,0.4031095802783966,-0.7350491285324097,-0.09155210852622986,-0.5202272534370422,2.914843797683716,0.008092325180768967,-0.9644595384597778,-8.384055137634277,0.9819842576980591,2.387035369873047,-1.360823392868042,0.3085494935512543,-0.006155462935566902,-1.5272254943847656,2.7732648849487305,-3.8461568355560303,4.080369472503662,0.38585734367370605,0.7659945487976074,3.650161027908325,0.017485875636339188,-2.2022206783294678,-0.3097240924835205,0.5435101389884949,0.5774707794189453,0.4810275733470917,-1.69173264503479,-2.6993160247802734,-0.47030824422836304,1.5826627016067505,-0.43773382902145386,-0.30387112498283386,0.3820122480392456,3.253894567489624,-1.1975232362747192,3.1176321506500244,-9.871192932128906,-0.5287131667137146,0.3792739808559418,0.9694873094558716,-1.0862293243408203,3.4383020401000977,0.07630074769258499,-0.06003553047776222,0.6602429747581482,0.6876207590103149,-0.5135317444801331,0.3013855516910553,0.9656439423561096,1.3226909637451172,0.25730401277542114,0.3171975910663605,0.6259008049964905,1.159265398979187,0.7226061224937439,4.500885009765625,-3.4571080207824707,1.3952463865280151,17.716896057128906,1.0725455284118652,-0.7944453358650208,-0.5876248478889465,1.4274401664733887,-0.10636723041534424,0.2502325773239136,0.20577512681484222,-1.1152327060699463,6.6111741065979,1.9275187253952026,-1.442297101020813,1.9828625917434692,1.7964917421340942,-3.9538748264312744,-7.7556328773498535,-1.0115275382995605,20.01094627380371,6.4356536865234375,-2.5195066928863525,0.02534077875316143,3.911663055419922,-0.0038946426939219236,2.862354040145874,-1.0979230403900146,1.1026246547698975,-1.1458264589309692,-0.2797725796699524,-10.230199813842773,-10.597176551818848,-15.95406436920166,-0.6008628606796265,-0.039591167122125626,-0.7750679850578308,-0.4587893486022949,1.7265734672546387,-1.4378631114959717,-4.9544501304626465,0.781624972820282,-0.08978486806154251,2.675976514816284,8.308154106140137,0.3249693214893341,-8.655454635620117,-0.6157262325286865,0.7538484930992126,-1.112542986869812,-0.40923309326171875,-1.7643399238586426,-8.801962852478027,-1.0340564250946045,-0.22289353609085083,-0.43125760555267334,3.3893892765045166,-0.8180545568466187,4.150113105773926,-4.197964191436768,-0.753121554851532,0.6335309147834778,-0.609158992767334,-1.0968571901321411,-1.7372475862503052,-0.5021643042564392,-0.5581701993942261,-0.7719393372535706,0.7448863387107849,0.5509207248687744,0.36941957473754883,-3.2958295345306396,-1.3663948774337769,-0.5481045842170715,1.0996261835098267,-4.850512981414795,0.2331988364458084,5.205552101135254,3.504847288131714,-10.052949905395508,-6.212740898132324,1.3993149995803833,-0.35193943977355957,2.375816822052002,1.9341896772384644,-4.045427322387695,-1.6433358192443848,-0.6641859412193298,-0.08849690109491348,-0.9175936579704285,0.12501853704452515,-1.1394621133804321,-11.10146427154541,0.5180894136428833,-1.6261982917785645,-0.13182440400123596,7.885247230529785,0.6791437268257141,3.779183864593506,-6.470344066619873,-0.331771582365036,-11.073980331420898,-1.3811306953430176,0.4290042221546173,1.6270257234573364,-0.1684020310640335,1.4285008907318115,1.1850091218948364,0.25943994522094727,-1.7565290927886963,0.705877959728241,1.800451636314392,-7.246057033538818,-0.4525226056575775,0.7120637893676758,2.517521381378174,-0.9578368663787842,7.045985698699951,-6.67593240737915,-0.8225671648979187,1.7933204174041748,-7.585422515869141,1.6360868215560913,2.914543628692627,-1.7080307006835938,-0.170059934258461,-1.5264394283294678,1.3206168413162231,0.783294677734375,0.378461092710495,1.0187909603118896,1.3779960870742798,20.28940773010254,-0.8095359802246094,-0.7915604114532471,-1.020056128501892,-0.5835771560668945,-3.7538957595825195,-3.365640163421631,-0.1362655907869339,15.882048606872559,-2.4505112171173096,-0.30441707372665405,3.1888015270233154,7.338600158691406,-0.6550396680831909,-2.46144437789917,2.9653022289276123,0.9569517970085144,1.796289324760437,0.7878031730651855,-3.9269232749938965,-7.278059005737305,-2.450695276260376,0.5606042146682739,0.5677956342697144,2.847348928451538,9.310966491699219,7.219578266143799,-18.80048942565918,-1.7538548707962036,-2.808671712875366,-11.524297714233398,-14.48690414428711,-0.3257560431957245,-0.40732577443122864,2.075174570083618,0.3249252438545227,-0.044785283505916595,-3.389185905456543,0.055934663861989975,-3.370945692062378,-9.055014610290527,4.4922404289245605,-0.756331741809845,0.01629537343978882,-3.907686710357666,-3.496919870376587,4.902338981628418,-2.7576773166656494,-0.8274951577186584]},"outputBias":{"rows":20,"columns":1,"weights":[13.533453941345215,2.2808780670166016,11.463117599487305,5.7512617111206055,0.22357778251171112,2.2707462310791016,-0.4773842394351959,-0.7040053606033325,-1.6392509937286377,0.8290275931358337,3.4211018085479736,-16.077714920043945,0.7571679353713989,2.5807981491088867,-5.813287258148193,1.524712085723877,-1.0101678371429443,-8.013070106506348,2.048135757446289,-15.161422729492188]},"cellActivationMatrix":{"rows":20,"columns":1,"weights":[0.06516266614198685,-0.42977985739707947,-1.7799997329711914,-3.227473258972168,3.7761342525482178,-0.4633139669895172,3.478300094604492,-2.5900535583496094,-3.8693578243255615,-0.8579501509666443,0.2444288283586502,1.26975679397583,0.6417654752731323,-0.23163418471813202,0.3353058695793152,1.0223735570907593,-3.964784860610962,-2.389376163482666,1.8578414916992188,1.0933101177215576]},"cellActivationHidden":{"rows":20,"columns":20,"weights":[1.1508517265319824,0.4163587987422943,-2.1623287200927734,-4.325246334075928,-0.06307479739189148,6.876333713531494,0.6238057613372803,-1.0839701890945435,1.2515157461166382,-1.628883719444275,1.4458593130111694,-0.0026212981902062893,2.0288515090942383,0.8693369030952454,-0.054306864738464355,0.7679262757301331,-0.0216985996812582,-1.9016382694244385,1.3193755149841309,-6.875316143035889,1.4169540405273438,0.2588571608066559,0.04598142206668854,1.0534720420837402,0.1600317507982254,-0.9337007999420166,-0.0078048245050013065,0.05251776799559593,0.1409110426902771,0.1525288075208664,0.154715433716774,-0.4592922627925873,0.9507516026496887,0.17274272441864014,0.09909383952617645,0.403854101896286,0.18704020977020264,0.12008142471313477,-0.037636250257492065,1.4134117364883423,0.2511887550354004,0.11740431934595108,2.2754745483398438,0.8400264382362366,1.7480467557907104,-3.777618169784546,-0.43998420238494873,0.24912872910499573,-0.06773093342781067,-0.08200349658727646,0.2847176492214203,0.22031424939632416,-1.4068676233291626,-0.8753535747528076,0.0020626788027584553,-2.0963611602783203,-0.1822976917028427,0.46276044845581055,0.12156300991773605,-1.6382182836532593,0.001856005983427167,0.23465904593467712,1.9722543954849243,-0.7866301536560059,0.17827245593070984,0.30300062894821167,-0.24826785922050476,-0.2929597795009613,0.24027276039123535,0.18558593094348907,-0.5930166840553284,0.6466938257217407,1.3311790227890015,-1.3478028774261475,-0.15275712311267853,1.1171472072601318,0.02731405198574066,-2.519183397293091,-0.6510916352272034,-0.9497702717781067,0.6285013556480408,0.6583167314529419,-0.17782241106033325,0.1077263131737709,-0.2021736055612564,-1.5168095827102661,0.029271868988871574,-0.292622447013855,0.4346996247768402,0.25866514444351196,-1.176879644393921,-0.9788643717765808,-0.14542318880558014,0.3615865111351013,-0.0665610060095787,0.44120994210243225,-0.5309125781059265,1.0848230123519897,-0.6914332509040833,2.1430840492248535,-1.0101357698440552,0.05031999945640564,-0.13801078498363495,-0.4499478340148926,-0.4216221272945404,0.7386682033538818,-0.019399916753172874,0.47937890887260437,0.3839707672595978,-0.41854920983314514,-0.22847840189933777,-0.3155074417591095,-0.0065927812829613686,1.2804228067398071,-0.2380257546901703,0.020306169986724854,0.5598786473274231,-0.18976715207099915,-0.25790637731552124,-0.07555460184812546,0.8744935393333435,-0.7027791142463684,-1.51903235912323,1.7569282054901123,-0.05839810520410538,0.44992145895957947,-0.16364818811416626,0.5137702226638794,0.17436924576759338,-0.2852519154548645,-0.75947505235672,-3.360290288925171,-0.03832869604229927,0.3091311752796173,-0.25530365109443665,-0.27641668915748596,0.40571632981300354,2.944983959197998,-1.8600172996520996,-1.1796417236328125,-1.3909696340560913,1.2406376600265503,0.01460791751742363,-1.0793358087539673,-0.6114704012870789,-3.0130367279052734,-0.3723563551902771,-0.6861257553100586,-0.09508579224348068,0.037331294268369675,0.1984168291091919,0.10959358513355255,-0.496368408203125,1.1514490842819214,-0.010995415970683098,-2.4345791339874268,-0.2256460040807724,-3.5244200229644775,0.36875322461128235,-1.9829339981079102,0.5105153322219849,6.273496627807617,10.181299209594727,4.702547550201416,-0.269225150346756,0.19900692999362946,-0.5171709060668945,-0.6724120378494263,-0.48383545875549316,0.4312398433685303,0.5782549381256104,0.8670189380645752,-0.37557700276374817,-1.1646705865859985,-1.3425090312957764,1.7768182754516602,-1.3315582275390625,-0.9671998023986816,-7.976405620574951,-1.327160358428955,-2.744255304336548,-0.40413451194763184,-0.544843852519989,-0.8118960857391357,-0.15750332176685333,1.3622509241104126,0.26783204078674316,0.5338550806045532,0.14290845394134521,-0.7257074117660522,0.6004483103752136,-1.095340371131897,0.201612651348114,3.570866823196411,0.3446368873119354,-0.674379289150238,-1.0883691310882568,0.5859603881835938,-1.895538091659546,-0.8641840815544128,-1.8787685632705688,0.014437712728977203,0.4672245681285858,1.0031200647354126,0.47290605306625366,-0.7051607966423035,-0.22966785728931427,0.5018547177314758,-0.5720022320747375,0.1828007847070694,-0.15215915441513062,2.147773027420044,-0.40368014574050903,0.43402355909347534,0.7923563718795776,-0.14169616997241974,0.20218975841999054,-0.10942663252353668,-0.05146262049674988,-1.1821370124816895,-1.508042812347412,-0.09916634112596512,-0.09110406041145325,-0.9151597619056702,-0.5773409605026245,0.7481487989425659,-0.11841259151697159,0.3195326328277588,-0.5068141222000122,-0.09246762841939926,-0.03250466287136078,1.4562058448791504,0.8760788440704346,1.4891422986984253,0.1438109129667282,-0.533552348613739,-0.07522013783454895,-0.8063223361968994,0.7850158214569092,1.9644776582717896,-0.8089613914489746,0.2416069358587265,-0.19356726109981537,-1.4621399641036987,-0.48743772506713867,-4.96555757522583,-0.4095931649208069,0.18714341521263123,0.1333935260772705,-0.10857730358839035,-0.42003947496414185,-0.3107057213783264,-3.975032329559326,1.3618121147155762,-0.022531786933541298,0.8268815875053406,-0.06273866444826126,-0.017921103164553642,-0.2171000987291336,3.6946516036987305,4.2255635261535645,0.8184933662414551,2.176016092300415,2.85707426071167,-0.3612934350967407,-5.707651138305664,-0.20644302666187286,-0.17922131717205048,-0.3233313262462616,0.2592880129814148,-0.6126959919929504,-0.8352117538452148,-0.9891527891159058,-3.3042144775390625,-0.34684133529663086,2.9838109016418457,0.0449080765247345,-2.9218666553497314,-0.46180614829063416,-0.1378304660320282,-1.1673909425735474,-0.6558108329772949,-3.7705039978027344,1.7523078918457031,-0.2794218063354492,-0.46414828300476074,0.013138007372617722,0.49743175506591797,-0.4642146825790405,-0.21354934573173523,-1.700647234916687,-2.8193068504333496,0.8752810955047607,-0.17714063823223114,0.7473306059837341,0.691805362701416,0.07558847963809967,3.539881944656372,-1.5638028383255005,-0.785370409488678,-1.7083563804626465,-0.7614285349845886,0.9442471265792847,-0.25806498527526855,-0.6212478280067444,3.6923820972442627,0.10152596235275269,0.6068632006645203,0.23203891515731812,-0.32184675335884094,0.5851379632949829,-1.454043984413147,0.2563568949699402,1.7856494188308716,0.20768290758132935,-0.2663136124610901,-0.6859397888183594,-3.151397705078125,-0.8246971368789673,-4.593519687652588,-0.02935274876654148,0.6893250346183777,7.117708206176758,-0.2903852164745331,0.03905261680483818,1.3380937576293945,0.18527467548847198,-0.3689769208431244,-0.10706671327352524,-0.1333339959383011,0.8163211345672607,6.423191547393799,-0.7183783054351807,0.042779598385095596,-0.7732324600219727,-1.4061733484268188,0.3335598111152649,-1.9668737649917603,0.0207232516258955,-1.4672783613204956,3.3855948448181152,-0.11365002393722534,-0.6151536703109741,3.394327163696289,0.3021644353866577,-0.7783946990966797,-0.23309272527694702,0.36538931727409363,0.08400123566389084,0.21621987223625183,-1.6646229028701782,-3.573835611343384,-1.2227624654769897,-0.25964152812957764,-0.04349769279360771,0.3738206923007965,0.10438080132007599,4.282876491546631,-1.9872597455978394,-3.8766069412231445,-1.8756388425827026,-0.5806367993354797,-0.48834529519081116,-1.614664912223816,-0.42543065547943115,2.0623443126678467,1.2604601383209229,-0.23552343249320984,-0.4112206995487213,0.4872862696647644,0.6565914750099182,2.3391194343566895,-0.4683779776096344,0.2766467332839966,0.4722195565700531,-0.16830241680145264,-0.7013166546821594,-1.3543978929519653,0.48400139808654785,0.16017034649848938,-3.179352045059204,-0.11312784254550934,0.022886045277118683,-2.368433713912964,-0.4156447947025299,-0.13133449852466583,-0.19713778793811798,0.6123040914535522,0.43673160672187805,0.4232202172279358,-1.4642126560211182,0.19916167855262756,0.5412797927856445,-0.38646501302719116,-0.20611079037189484,1.803348183631897,0.3190385103225708,0.1715676486492157,0.5729466080665588,2.0642054080963135]},"cellActivationBias":{"rows":20,"columns":1,"weights":[-7.063442230224609,-1.381649374961853,-1.7962967157363892,-0.776714026927948,-0.37436020374298096,1.417163610458374,-0.2733874022960663,-0.2692396342754364,1.4033504724502563,-0.9619312286376953,1.224098801612854,0.6876978874206543,1.5288786888122559,3.723524570465088,-0.5197005271911621,-1.0078030824661255,-0.10122141242027283,1.9490597248077393,0.08782511204481125,0.1456124484539032]}}],"outputConnector":{"rows":1,"columns":20,"weights":[0.4852655529975891,1.4628324508666992,0.2131512314081192,-0.3810558617115021,2.021106004714966,-0.74998939037323,0.6219121813774109,-2.271711587905884,-8.081018447875977,1.925248622894287,-0.6009470224380493,-0.3011384606361389,-0.9019030928611755,-1.6390076875686646,1.120015025138855,-2.3163344860076904,-1.1214609146118164,2.1564247608184814,0.19371874630451202,0.060456283390522]},"output":{"rows":1,"columns":1,"weights":[3.3728177547454834]},"inputLookup":{"h":0,"d":1,"a":2},"inputLookupLength":3,"outputLookup":{"fthg":0,"ftag":1},"outputLookupLength":2};
  var output = [];
  var states = [];
  var prevStates;
  var state;
  var max = input.length + 1;
  for (var _i = 0; _i < max; _i++) {
    prevStates = states;
    states = [];
    states[0] = {
      name: 'forwardFn',
      left: undefined,
      right: undefined,
      product: new Matrix(1, 1)
    };
    states[1] = {
      name: 'multiply',
      left: json.hiddenLayers[0].inputMatrix,
      right: states[0].product,
      product: new Matrix(20, 1)
    };
    states[2] = {
      name: 'multiply',
      left: json.hiddenLayers[0].inputHidden,
      right: typeof prevStates[25] === 'object' ? prevStates[25].product : new Matrix(20, 1),
      product: new Matrix(20, 1)
    };
    states[3] = {
      name: 'add',
      left: states[1].product,
      right: states[2].product,
      product: new Matrix(20, 1)
    };
    states[4] = {
      name: 'add',
      left: states[3].product,
      right: json.hiddenLayers[0].inputBias,
      product: new Matrix(20, 1)
    };
    states[5] = {
      name: 'sigmoid',
      left: states[4].product,
      right: undefined,
      product: new Matrix(20, 1)
    };
    states[6] = {
      name: 'multiply',
      left: json.hiddenLayers[0].forgetMatrix,
      right: states[0].product,
      product: new Matrix(20, 1)
    };
    states[7] = {
      name: 'multiply',
      left: json.hiddenLayers[0].forgetHidden,
      right: states[2].right,
      product: new Matrix(20, 1)
    };
    states[8] = {
      name: 'add',
      left: states[6].product,
      right: states[7].product,
      product: new Matrix(20, 1)
    };
    states[9] = {
      name: 'add',
      left: states[8].product,
      right: json.hiddenLayers[0].forgetBias,
      product: new Matrix(20, 1)
    };
    states[10] = {
      name: 'sigmoid',
      left: states[9].product,
      right: undefined,
      product: new Matrix(20, 1)
    };
    states[11] = {
      name: 'multiply',
      left: json.hiddenLayers[0].outputMatrix,
      right: states[0].product,
      product: new Matrix(20, 1)
    };
    states[12] = {
      name: 'multiply',
      left: json.hiddenLayers[0].outputHidden,
      right: states[2].right,
      product: new Matrix(20, 1)
    };
    states[13] = {
      name: 'add',
      left: states[11].product,
      right: states[12].product,
      product: new Matrix(20, 1)
    };
    states[14] = {
      name: 'add',
      left: states[13].product,
      right: json.hiddenLayers[0].outputBias,
      product: new Matrix(20, 1)
    };
    states[15] = {
      name: 'sigmoid',
      left: states[14].product,
      right: undefined,
      product: new Matrix(20, 1)
    };
    states[16] = {
      name: 'multiply',
      left: json.hiddenLayers[0].cellActivationMatrix,
      right: states[0].product,
      product: new Matrix(20, 1)
    };
    states[17] = {
      name: 'multiply',
      left: json.hiddenLayers[0].cellActivationHidden,
      right: states[2].right,
      product: new Matrix(20, 1)
    };
    states[18] = {
      name: 'add',
      left: states[16].product,
      right: states[17].product,
      product: new Matrix(20, 1)
    };
    states[19] = {
      name: 'add',
      left: states[18].product,
      right: json.hiddenLayers[0].cellActivationBias,
      product: new Matrix(20, 1)
    };
    states[20] = {
      name: 'tanh',
      left: states[19].product,
      right: undefined,
      product: new Matrix(20, 1)
    };
    states[21] = {
      name: 'multiplyElement',
      left: states[10].product,
      right: states[2].right,
      product: new Matrix(20, 1)
    };
    states[22] = {
      name: 'multiplyElement',
      left: states[5].product,
      right: states[20].product,
      product: new Matrix(20, 1)
    };
    states[23] = {
      name: 'add',
      left: states[21].product,
      right: states[22].product,
      product: new Matrix(20, 1)
    };
    states[24] = {
      name: 'tanh',
      left: states[23].product,
      right: undefined,
      product: new Matrix(20, 1)
    };
    states[25] = {
      name: 'multiplyElement',
      left: states[15].product,
      right: states[24].product,
      product: new Matrix(20, 1)
    };
    states[26] = {
      name: 'multiply',
      left: json.outputConnector,
      right: states[25].product,
      product: new Matrix(1, 1)
    };
    states[27] = {
      name: 'add',
      left: states[26].product,
      right: json.output,
      product: new Matrix(1, 1)
    };
    for (var stateIndex = 0, stateMax = 28; stateIndex < stateMax; stateIndex++) {
      state = states[stateIndex];
      var product = state.product;
      var left = state.left;
      var right = state.right;

      switch (state.name) {
case 'forwardFn':
product.weights = _i < input.length ? input[_i]: prevStates[prevStates.length - 1].product.weights;
break;
        case 'multiply': //compiled from src/recurrent/matrix/multiply.js
          
            const leftRows = left.rows;
            const leftColumns = left.columns;
            const rightColumns = right.columns;
            // loop over rows of left
            for (let leftRow = 0; leftRow < leftRows; leftRow++) {
                const leftRowBase = leftColumns * leftRow;
                const rightRowBase = rightColumns * leftRow;
                // loop over cols of right
                for (let rightColumn = 0; rightColumn < rightColumns; rightColumn++) {
                    // dot product loop
                    let dot = 0;
                    // loop over columns of left
                    for (let leftColumn = 0; leftColumn < leftColumns; leftColumn++) {
                        const rightColumnBase = rightColumns * leftColumn;
                        const leftIndex = leftRowBase + leftColumn;
                        const rightIndex = rightColumnBase + rightColumn;
                        dot += left.weights[leftIndex] * right.weights[rightIndex];
                        
                        
                    }
                    product.weights[rightRowBase + rightColumn] = dot;
                }
            }
        
          break;
        case 'add': //compiled from src/recurrent/matrix/add.js
          
            for (let i = 0; i < left.weights.length; i++) {
                product.weights[i] = left.weights[i] + right.weights[i];
                
            }
        
          break;
        case 'sigmoid': //compiled from src/recurrent/matrix/sigmoid.js
          
            // sigmoid nonlinearity
            for (let i = 0; i < left.weights.length; i++) {
                product.weights[i] = 1 / (1 + Math.exp(-left.weights[i]));
                
            }
        
          break;
        case 'tanh': //compiled from src/recurrent/matrix/tanh.js
          
            // tanh nonlinearity
            for (let i = 0; i < left.weights.length; i++) {
                product.weights[i] = Math.tanh(left.weights[i]);
                
            }
        
          break;
        case 'multiplyElement': //compiled from src/recurrent/matrix/multiply-element.js
          
            const { weights } = left;
            for (let i = 0; i < weights.length; i++) {
                product.weights[i] = left.weights[i] * right.weights[i];
                
            }
        
          break;
      }
    }
    if (_i >= input.length - 1) { output.push(state.product.weights); }
  }
  return lookupOutput(output);
  function lookupInput(input) {
          var table = {"h":0,"d":1,"a":2};
          var result = [];
          for (var p in table) {
            result.push(Float32Array.from([input[p]]));
          }
          return result;
        }
  function lookupOutput(output) {
          var table = {"fthg":0,"ftag":1};
          var result = {};
          for (var p in table) {
            result[p] = output[table[p]][0];
          }
          return result;
        }

  function Matrix(rows, columns) {
    this.rows = rows;
    this.columns = columns;
    this.weights = zeros(rows * columns);
  }
  function zeros$1(size) {
    return new Float32Array(size);
}
  function softmax(matrix) {
    // probability volume
    const result = new Matrix(matrix.rows, matrix.columns);
    let maxVal = -999999;
    for (let i = 0; i < matrix.weights.length; i++) {
        if (matrix.weights[i] > maxVal) {
            maxVal = matrix.weights[i];
        }
    }
    let s = 0;
    for (let i = 0; i < matrix.weights.length; i++) {
        result.weights[i] = Math.exp(matrix.weights[i] - maxVal);
        s += result.weights[i];
    }
    for (let i = 0; i < matrix.weights.length; i++) {
        result.weights[i] /= s;
    }
    // no backward pass here needed
    // since we will use the computed probabilities outside
    // to set gradients directly on m
    return result;
}
  function randomFloat(min, max) {
    return Math.random() * (max - min) + min;
}
  function sampleI(matrix) {
    // sample argmax from w, assuming w are
    // probabilities that sum to one
    const r = randomFloat(0, 1);
    const w = matrix.weights;
    let x = 0;
    let i = 0;
    while (true) {
        x += w[i];
        if (x > r) {
            return i;
        }
        i++;
    }
}
  function maxI(matrix) {
    // argmax of array w
    const { weights } = matrix;
    let maxv = weights[0];
    let maxix = 0;
    for (let i = 1; i < weights.length; i++) {
        const v = weights[i];
        if (v < maxv)
            continue;
        maxix = i;
        maxv = v;
    }
    return maxix;
}
};